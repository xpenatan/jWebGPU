/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUComputePipeline extends IDLBase {

    private WGPUBindGroupLayout WGPUBindGroupLayout_TEMP_GEN_0;

    static public final WGPUComputePipeline NULL = WGPUComputePipeline.native_new();

    static public final WGPUComputePipeline T_01 = WGPUComputePipeline.native_new();

    static public final WGPUComputePipeline T_02 = WGPUComputePipeline.native_new();

    static public final WGPUComputePipeline T_03 = WGPUComputePipeline.native_new();

    public WGPUComputePipeline() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUComputePipeline();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUComputePipeline();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUComputePipeline(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUComputePipeline native_new() {
        return new WGPUComputePipeline((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);
jsObj.Release();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public void setLabel(String value) {
        internal_native_SetLabel(native_address, value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);
jsObj.SetLabel(value);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "value"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);jsObj.SetLabel(value);")
    public static native void internal_native_SetLabel(int this_addr, String value);

    public WGPUBindGroupLayout getBindGroupLayout(int groupIndex) {
        int pointer = internal_native_GetBindGroupLayout(native_address, groupIndex);
        if (pointer == 0)
            return null;
        if (WGPUBindGroupLayout_TEMP_GEN_0 == null)
            WGPUBindGroupLayout_TEMP_GEN_0 = WGPUBindGroupLayout.native_new();
        WGPUBindGroupLayout_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUBindGroupLayout_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);
var returnedJSObj = jsObj.GetBindGroupLayout(groupIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "groupIndex"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);var returnedJSObj = jsObj.GetBindGroupLayout(groupIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_GetBindGroupLayout(int this_addr, int groupIndex);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);
var returnedJSObj = jsObj.IsValid();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipeline);var returnedJSObj = jsObj.IsValid();return returnedJSObj;")
    public static native boolean internal_native_IsValid(int this_addr);
}
