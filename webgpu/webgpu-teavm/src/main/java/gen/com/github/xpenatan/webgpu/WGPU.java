/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPU extends IDLBase {

    static private WGPUInstance WGPUInstance_TEMP_STATIC_GEN_0;

    static private STBImage STBImage_TEMP_STATIC_GEN_0;

    static private STBImage STBImage_TEMP_STATIC_GEN_1;

    static public final WGPU NULL = WGPU.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPU(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPU native_new() {
        return new WGPU((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPU);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPU);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUPlatformType getPlatformType() {
        int value = internal_native_GetPlatformType();
        return WGPUPlatformType.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPU.prototype.GetPlatformType();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPU.prototype.GetPlatformType();return returnedJSObj;")
    public static native int internal_native_GetPlatformType();

    public static WGPUInstance setupInstance(WGPUInstanceDescriptor descriptor) {
        int pointer = internal_native_SetupInstance(descriptor.native_address);
        if (pointer == 0)
            return WGPUInstance.NULL;
        WGPUInstance WGPUInstance_NEW = WGPUInstance.native_new();
        WGPUInstance_NEW.internal_reset(pointer, true);
        return WGPUInstance_NEW;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPU.prototype.SetupInstance(descriptor_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"descriptor_addr"}, script = "var returnedJSObj = jWebGPU.WGPU.prototype.SetupInstance(descriptor_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_SetupInstance(int descriptor_addr);

    public static WGPUInstance setupInstance() {
        int pointer = internal_native_SetupInstance();
        if (pointer == 0)
            return WGPUInstance.NULL;
        if (WGPUInstance_TEMP_STATIC_GEN_0 == null)
            WGPUInstance_TEMP_STATIC_GEN_0 = WGPUInstance.native_new();
        WGPUInstance_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUInstance_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPU.prototype.SetupInstance();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPU.prototype.SetupInstance();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_SetupInstance();

    public static STBImage loadImage(WGPUByteBuffer buffer, int desiredChannels) {
        int pointer = internal_native_loadImage(buffer.native_address, desiredChannels);
        if (pointer == 0)
            return STBImage.NULL;
        if (STBImage_TEMP_STATIC_GEN_0 == null)
            STBImage_TEMP_STATIC_GEN_0 = STBImage.native_new();
        STBImage_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return STBImage_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPU.prototype.loadImage(buffer_addr, desiredChannels);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"buffer_addr", "desiredChannels"}, script = "var returnedJSObj = jWebGPU.WGPU.prototype.loadImage(buffer_addr, desiredChannels);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_loadImage(int buffer_addr, int desiredChannels);

    public static STBImage loadImage(WGPUByteBuffer buffer) {
        int pointer = internal_native_loadImage(buffer.native_address);
        if (pointer == 0)
            return STBImage.NULL;
        if (STBImage_TEMP_STATIC_GEN_1 == null)
            STBImage_TEMP_STATIC_GEN_1 = STBImage.native_new();
        STBImage_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return STBImage_TEMP_STATIC_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPU.prototype.loadImage(buffer_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"buffer_addr"}, script = "var returnedJSObj = jWebGPU.WGPU.prototype.loadImage(buffer_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_loadImage(int buffer_addr);
}
