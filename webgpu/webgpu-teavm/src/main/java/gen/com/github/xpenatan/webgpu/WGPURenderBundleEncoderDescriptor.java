/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPURenderBundleEncoderDescriptor extends IDLBase {

    static private WGPURenderBundleEncoderDescriptor WGPURenderBundleEncoderDescriptor_TEMP_STATIC_GEN_0;

    static public final WGPURenderBundleEncoderDescriptor NULL = WGPURenderBundleEncoderDescriptor.native_new();

    static public final WGPURenderBundleEncoderDescriptor T_01 = WGPURenderBundleEncoderDescriptor.native_new();

    static public final WGPURenderBundleEncoderDescriptor T_02 = WGPURenderBundleEncoderDescriptor.native_new();

    static public final WGPURenderBundleEncoderDescriptor T_03 = WGPURenderBundleEncoderDescriptor.native_new();

    public WGPURenderBundleEncoderDescriptor() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPURenderBundleEncoderDescriptor();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPURenderBundleEncoderDescriptor();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPURenderBundleEncoderDescriptor(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPURenderBundleEncoderDescriptor native_new() {
        return new WGPURenderBundleEncoderDescriptor((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPURenderBundleEncoderDescriptor obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPURenderBundleEncoderDescriptor_TEMP_STATIC_GEN_0 == null)
            WGPURenderBundleEncoderDescriptor_TEMP_STATIC_GEN_0 = WGPURenderBundleEncoderDescriptor.native_new();
        WGPURenderBundleEncoderDescriptor_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPURenderBundleEncoderDescriptor_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPURenderBundleEncoderDescriptor.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPURenderBundleEncoderDescriptor.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetLabel(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetLabel(label);")
    public static native void internal_native_SetLabel(int this_addr, String label);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetNextInChain(chainedStruct_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "chainedStruct_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetNextInChain(chainedStruct_addr);")
    public static native void internal_native_SetNextInChain(int this_addr, int chainedStruct_addr);

    public void setColorFormats(WGPUVectorTextureFormat colorFormats) {
        internal_native_SetColorFormats(native_address, colorFormats.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetColorFormats(colorFormats_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "colorFormats_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetColorFormats(colorFormats_addr);")
    public static native void internal_native_SetColorFormats(int this_addr, int colorFormats_addr);

    public void setDepthStencilFormat(WGPUTextureFormat depthStencilFormat) {
        internal_native_SetDepthStencilFormat(native_address, (int) depthStencilFormat.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetDepthStencilFormat(depthStencilFormat);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "depthStencilFormat"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetDepthStencilFormat(depthStencilFormat);")
    public static native void internal_native_SetDepthStencilFormat(int this_addr, int depthStencilFormat);

    public void setSampleCount(int sampleCount) {
        internal_native_SetSampleCount(native_address, sampleCount);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetSampleCount(sampleCount);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "sampleCount"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetSampleCount(sampleCount);")
    public static native void internal_native_SetSampleCount(int this_addr, int sampleCount);

    public void setDepthReadOnly(int depthReadOnly) {
        internal_native_SetDepthReadOnly(native_address, depthReadOnly);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetDepthReadOnly(depthReadOnly);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "depthReadOnly"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetDepthReadOnly(depthReadOnly);")
    public static native void internal_native_SetDepthReadOnly(int this_addr, int depthReadOnly);

    public void setStencilReadOnly(int stencilReadOnly) {
        internal_native_SetStencilReadOnly(native_address, stencilReadOnly);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);
jsObj.SetStencilReadOnly(stencilReadOnly);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "stencilReadOnly"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoderDescriptor);jsObj.SetStencilReadOnly(stencilReadOnly);")
    public static native void internal_native_SetStencilReadOnly(int this_addr, int stencilReadOnly);
}
