/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUInstance extends IDLBase {

    static public final WGPUInstance NULL = WGPUInstance.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUInstance(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUInstance native_new() {
        return new WGPUInstance((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.IsValid();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.IsValid();return returnedJSObj;")
    public static native boolean internal_native_IsValid(int this_addr);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
jsObj.Release();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public void requestAdapter(WGPURequestAdapterOptions options, WGPUCallbackMode mode, WGPURequestAdapterCallback callback) {
        internal_native_RequestAdapter(native_address, options.native_address, (int) mode.getValue(), callback.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
jsObj.RequestAdapter(options_addr, mode, callback_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "options_addr", "mode", "callback_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);jsObj.RequestAdapter(options_addr, mode, callback_addr);")
    public static native void internal_native_RequestAdapter(int this_addr, int options_addr, int mode, int callback_addr);

    public WGPUSurface createWebSurface(String canvas) {
        int pointer = internal_native_CreateWebSurface(native_address, canvas);
        if (pointer == 0)
            return WGPUSurface.NULL;
        WGPUSurface WGPUSurface_NEW = WGPUSurface.native_new();
        WGPUSurface_NEW.internal_reset(pointer, true);
        return WGPUSurface_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.CreateWebSurface(canvas);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "canvas"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.CreateWebSurface(canvas);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_CreateWebSurface(int this_addr, String canvas);

    public WGPUSurface createWindowsSurface(IDLBase hwnd) {
        int pointer = internal_native_CreateWindowsSurface(native_address, hwnd.native_void_address);
        if (pointer == 0)
            return WGPUSurface.NULL;
        WGPUSurface WGPUSurface_NEW = WGPUSurface.native_new();
        WGPUSurface_NEW.internal_reset(pointer, true);
        return WGPUSurface_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.CreateWindowsSurface(hwnd_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "hwnd_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.CreateWindowsSurface(hwnd_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_CreateWindowsSurface(int this_addr, int hwnd_addr);

    public WGPUSurface createLinuxSurface(boolean isWayland, IDLBase windowOrSurface, IDLBase display) {
        int pointer = internal_native_CreateLinuxSurface(native_address, isWayland, windowOrSurface.native_void_address, display.native_void_address);
        if (pointer == 0)
            return WGPUSurface.NULL;
        WGPUSurface WGPUSurface_NEW = WGPUSurface.native_new();
        WGPUSurface_NEW.internal_reset(pointer, true);
        return WGPUSurface_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.CreateLinuxSurface(isWayland, windowOrSurface_addr, display_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "isWayland", "windowOrSurface_addr", "display_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.CreateLinuxSurface(isWayland, windowOrSurface_addr, display_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_CreateLinuxSurface(int this_addr, boolean isWayland, int windowOrSurface_addr, int display_addr);

    public WGPUSurface createMacSurface(IDLBase metalLayer) {
        int pointer = internal_native_CreateMacSurface(native_address, metalLayer.native_void_address);
        if (pointer == 0)
            return WGPUSurface.NULL;
        WGPUSurface WGPUSurface_NEW = WGPUSurface.native_new();
        WGPUSurface_NEW.internal_reset(pointer, true);
        return WGPUSurface_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.CreateMacSurface(metalLayer_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "metalLayer_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.CreateMacSurface(metalLayer_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_CreateMacSurface(int this_addr, int metalLayer_addr);

    public WGPUSurface createAndroidSurface(WGPUAndroidWindow surface) {
        int pointer = internal_native_CreateAndroidSurface(native_address, surface.native_address);
        if (pointer == 0)
            return WGPUSurface.NULL;
        WGPUSurface WGPUSurface_NEW = WGPUSurface.native_new();
        WGPUSurface_NEW.internal_reset(pointer, true);
        return WGPUSurface_NEW;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.CreateAndroidSurface(surface_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "surface_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.CreateAndroidSurface(surface_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_CreateAndroidSurface(int this_addr, int surface_addr);

    public void processEvents() {
        internal_native_ProcessEvents(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
jsObj.ProcessEvents();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);jsObj.ProcessEvents();")
    public static native void internal_native_ProcessEvents(int this_addr);

    public WGPUWaitStatus waitAny(WGPUVectorFutureWaitInfo futureVector, int timeoutNS) {
        int value = internal_native_WaitAny(native_address, futureVector.native_address, timeoutNS);
        return WGPUWaitStatus.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);
var returnedJSObj = jsObj.WaitAny(futureVector_addr, timeoutNS);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "futureVector_addr", "timeoutNS"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUInstance);var returnedJSObj = jsObj.WaitAny(futureVector_addr, timeoutNS);return returnedJSObj;")
    public static native int internal_native_WaitAny(int this_addr, int futureVector_addr, int timeoutNS);
}
