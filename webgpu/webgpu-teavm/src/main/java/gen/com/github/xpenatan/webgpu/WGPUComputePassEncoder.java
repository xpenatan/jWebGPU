/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUComputePassEncoder extends IDLBase {

    static private WGPUComputePassEncoder WGPUComputePassEncoder_TEMP_STATIC_GEN_0;

    static public final WGPUComputePassEncoder NULL = WGPUComputePassEncoder.native_new();

    static public final WGPUComputePassEncoder T_01 = WGPUComputePassEncoder.native_new();

    static public final WGPUComputePassEncoder T_02 = WGPUComputePassEncoder.native_new();

    static public final WGPUComputePassEncoder T_03 = WGPUComputePassEncoder.native_new();

    public WGPUComputePassEncoder() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUComputePassEncoder();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUComputePassEncoder();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUComputePassEncoder(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUComputePassEncoder native_new() {
        return new WGPUComputePassEncoder((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUComputePassEncoder obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUComputePassEncoder_TEMP_STATIC_GEN_0 == null)
            WGPUComputePassEncoder_TEMP_STATIC_GEN_0 = WGPUComputePassEncoder.native_new();
        WGPUComputePassEncoder_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUComputePassEncoder_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUComputePassEncoder.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUComputePassEncoder.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.SetLabel(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.SetLabel(label);")
    public static native void internal_native_SetLabel(int this_addr, String label);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.Release();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public void setDispatchWorkgroups(int workgroupCountX, int workgroupCountY, int workgroupCountZ) {
        internal_native_SetDispatchWorkgroups(native_address, workgroupCountX, workgroupCountY, workgroupCountZ);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.SetDispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "workgroupCountX", "workgroupCountY", "workgroupCountZ"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.SetDispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ);")
    public static native void internal_native_SetDispatchWorkgroups(int this_addr, int workgroupCountX, int workgroupCountY, int workgroupCountZ);

    public void dispatchWorkgroupsIndirect(WGPUBuffer indirectBuffer, int indirectOffset) {
        internal_native_DispatchWorkgroupsIndirect(native_address, indirectBuffer.native_address, indirectOffset);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.DispatchWorkgroupsIndirect(indirectBuffer_addr, indirectOffset);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "indirectBuffer_addr", "indirectOffset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.DispatchWorkgroupsIndirect(indirectBuffer_addr, indirectOffset);")
    public static native void internal_native_DispatchWorkgroupsIndirect(int this_addr, int indirectBuffer_addr, int indirectOffset);

    public void end() {
        internal_native_End(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.End();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.End();")
    public static native void internal_native_End(int this_addr);

    public void insertDebugMarker(String value) {
        internal_native_InsertDebugMarker(native_address, value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.InsertDebugMarker(value);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "value"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.InsertDebugMarker(value);")
    public static native void internal_native_InsertDebugMarker(int this_addr, String value);

    public void popDebugGroup() {
        internal_native_PopDebugGroup(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.PopDebugGroup();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.PopDebugGroup();")
    public static native void internal_native_PopDebugGroup(int this_addr);

    public void pushDebugGroup(String groupLabel) {
        internal_native_PushDebugGroup(native_address, groupLabel);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.PushDebugGroup(groupLabel);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "groupLabel"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.PushDebugGroup(groupLabel);")
    public static native void internal_native_PushDebugGroup(int this_addr, String groupLabel);

    public void setBindGroup(int groupIndex, WGPUBindGroup group, WGPUVectorInt offsets) {
        internal_native_SetBindGroup(native_address, groupIndex, group.native_address, offsets.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.SetBindGroup(groupIndex, group_addr, offsets_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "groupIndex", "group_addr", "offsets_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.SetBindGroup(groupIndex, group_addr, offsets_addr);")
    public static native void internal_native_SetBindGroup(int this_addr, int groupIndex, int group_addr, int offsets_addr);

    public void setBindGroup(int groupIndex, WGPUBindGroup group) {
        internal_native_SetBindGroup(native_address, groupIndex, group.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.SetBindGroup(groupIndex, group_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "groupIndex", "group_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.SetBindGroup(groupIndex, group_addr);")
    public static native void internal_native_SetBindGroup(int this_addr, int groupIndex, int group_addr);

    public void setPipeline(WGPUComputePipeline pipeline) {
        internal_native_SetPipeline(native_address, pipeline.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
jsObj.SetPipeline(pipeline_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "pipeline_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);jsObj.SetPipeline(pipeline_addr);")
    public static native void internal_native_SetPipeline(int this_addr, int pipeline_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);
var returnedJSObj = jsObj.IsValid();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePassEncoder);var returnedJSObj = jsObj.IsValid();return returnedJSObj;")
    public static native boolean internal_native_IsValid(int this_addr);
}
