/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPURenderBundleEncoder extends IDLBase {

    static public final WGPURenderBundleEncoder NULL = WGPURenderBundleEncoder.native_new();

    static public final WGPURenderBundleEncoder T_01 = WGPURenderBundleEncoder.native_new();

    static public final WGPURenderBundleEncoder T_02 = WGPURenderBundleEncoder.native_new();

    static public final WGPURenderBundleEncoder T_03 = WGPURenderBundleEncoder.native_new();

    public WGPURenderBundleEncoder() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPURenderBundleEncoder();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPURenderBundleEncoder();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPURenderBundleEncoder(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPURenderBundleEncoder native_new() {
        return new WGPURenderBundleEncoder((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.SetLabel(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.SetLabel(label);")
    public static native void internal_native_SetLabel(int this_addr, String label);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.Release();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public void setPipeline(WGPURenderPipeline renderPipeline) {
        internal_native_SetPipeline(native_address, renderPipeline.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.SetPipeline(renderPipeline_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "renderPipeline_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.SetPipeline(renderPipeline_addr);")
    public static native void internal_native_SetPipeline(int this_addr, int renderPipeline_addr);

    public void draw(int vertexCount, int instanceCount, int firstVertex, int firstInstance) {
        internal_native_Draw(native_address, vertexCount, instanceCount, firstVertex, firstInstance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.Draw(vertexCount, instanceCount, firstVertex, firstInstance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "vertexCount", "instanceCount", "firstVertex", "firstInstance"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.Draw(vertexCount, instanceCount, firstVertex, firstInstance);")
    public static native void internal_native_Draw(int this_addr, int vertexCount, int instanceCount, int firstVertex, int firstInstance);

    public void drawIndexed(int indexCount, int instanceCount, int firstIndex, int baseVertex, int firstInstance) {
        internal_native_DrawIndexed(native_address, indexCount, instanceCount, firstIndex, baseVertex, firstInstance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.DrawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "indexCount", "instanceCount", "firstIndex", "baseVertex", "firstInstance"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.DrawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);")
    public static native void internal_native_DrawIndexed(int this_addr, int indexCount, int instanceCount, int firstIndex, int baseVertex, int firstInstance);

    public void drawIndirect(WGPUBuffer indirectBuffer, int indirectOffset) {
        internal_native_DrawIndirect(native_address, indirectBuffer.native_address, indirectOffset);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.DrawIndirect(indirectBuffer_addr, indirectOffset);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "indirectBuffer_addr", "indirectOffset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.DrawIndirect(indirectBuffer_addr, indirectOffset);")
    public static native void internal_native_DrawIndirect(int this_addr, int indirectBuffer_addr, int indirectOffset);

    public void drawIndexedIndirect(WGPUBuffer indirectBuffer, int indirectOffset) {
        internal_native_DrawIndexedIndirect(native_address, indirectBuffer.native_address, indirectOffset);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.DrawIndexedIndirect(indirectBuffer_addr, indirectOffset);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "indirectBuffer_addr", "indirectOffset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.DrawIndexedIndirect(indirectBuffer_addr, indirectOffset);")
    public static native void internal_native_DrawIndexedIndirect(int this_addr, int indirectBuffer_addr, int indirectOffset);

    public void setBindGroup(int groupIndex, WGPUBindGroup group, WGPUVectorInt dynamicOffsets) {
        internal_native_SetBindGroup(native_address, groupIndex, group.native_address, dynamicOffsets.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.SetBindGroup(groupIndex, group_addr, dynamicOffsets_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "groupIndex", "group_addr", "dynamicOffsets_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.SetBindGroup(groupIndex, group_addr, dynamicOffsets_addr);")
    public static native void internal_native_SetBindGroup(int this_addr, int groupIndex, int group_addr, int dynamicOffsets_addr);

    public void setBindGroup(int groupIndex, WGPUBindGroup group) {
        internal_native_SetBindGroup(native_address, groupIndex, group.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.SetBindGroup(groupIndex, group_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "groupIndex", "group_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.SetBindGroup(groupIndex, group_addr);")
    public static native void internal_native_SetBindGroup(int this_addr, int groupIndex, int group_addr);

    public void setVertexBuffer(int slot, WGPUBuffer buffer, int offset, int size) {
        internal_native_SetVertexBuffer(native_address, slot, buffer.native_address, offset, size);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.SetVertexBuffer(slot, buffer_addr, offset, size);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "slot", "buffer_addr", "offset", "size"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.SetVertexBuffer(slot, buffer_addr, offset, size);")
    public static native void internal_native_SetVertexBuffer(int this_addr, int slot, int buffer_addr, int offset, int size);

    public void setIndexBuffer(WGPUBuffer buffer, WGPUIndexFormat format, int offset, int size) {
        internal_native_SetIndexBuffer(native_address, buffer.native_address, (int) format.getValue(), offset, size);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.SetIndexBuffer(buffer_addr, format, offset, size);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "buffer_addr", "format", "offset", "size"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.SetIndexBuffer(buffer_addr, format, offset, size);")
    public static native void internal_native_SetIndexBuffer(int this_addr, int buffer_addr, int format, int offset, int size);

    public void insertDebugMarker(String label) {
        internal_native_InsertDebugMarker(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.InsertDebugMarker(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.InsertDebugMarker(label);")
    public static native void internal_native_InsertDebugMarker(int this_addr, String label);

    public void popDebugGroup() {
        internal_native_PopDebugGroup(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.PopDebugGroup();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.PopDebugGroup();")
    public static native void internal_native_PopDebugGroup(int this_addr);

    public void pushDebugGroup(String label) {
        internal_native_PushDebugGroup(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.PushDebugGroup(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.PushDebugGroup(label);")
    public static native void internal_native_PushDebugGroup(int this_addr, String label);

    public void finish(WGPURenderBundleDescriptor descriptor, WGPURenderBundle bundleOut) {
        internal_native_Finish(native_address, descriptor.native_address, bundleOut.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
jsObj.Finish(descriptor_addr, bundleOut_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "descriptor_addr", "bundleOut_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);jsObj.Finish(descriptor_addr, bundleOut_addr);")
    public static native void internal_native_Finish(int this_addr, int descriptor_addr, int bundleOut_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);
var returnedJSObj = jsObj.IsValid();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPURenderBundleEncoder);var returnedJSObj = jsObj.IsValid();return returnedJSObj;")
    public static native boolean internal_native_IsValid(int this_addr);
}
