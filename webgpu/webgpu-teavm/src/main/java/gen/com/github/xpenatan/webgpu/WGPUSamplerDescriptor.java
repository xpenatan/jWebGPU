/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUSamplerDescriptor extends IDLBase {

    static private WGPUSamplerDescriptor WGPUSamplerDescriptor_TEMP_STATIC_GEN_0;

    static public final WGPUSamplerDescriptor NULL = WGPUSamplerDescriptor.native_new();

    static public final WGPUSamplerDescriptor T_01 = WGPUSamplerDescriptor.native_new();

    static public final WGPUSamplerDescriptor T_02 = WGPUSamplerDescriptor.native_new();

    static public final WGPUSamplerDescriptor T_03 = WGPUSamplerDescriptor.native_new();

    public WGPUSamplerDescriptor() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUSamplerDescriptor();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUSamplerDescriptor();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUSamplerDescriptor(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUSamplerDescriptor native_new() {
        return new WGPUSamplerDescriptor((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUSamplerDescriptor obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUSamplerDescriptor.NULL;
        if (WGPUSamplerDescriptor_TEMP_STATIC_GEN_0 == null)
            WGPUSamplerDescriptor_TEMP_STATIC_GEN_0 = WGPUSamplerDescriptor.native_new();
        WGPUSamplerDescriptor_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUSamplerDescriptor_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUSamplerDescriptor.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUSamplerDescriptor.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetLabel(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetLabel(label);")
    public static native void internal_native_SetLabel(int this_addr, String label);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetNextInChain(chainedStruct_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "chainedStruct_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetNextInChain(chainedStruct_addr);")
    public static native void internal_native_SetNextInChain(int this_addr, int chainedStruct_addr);

    public void setAddressModeU(WGPUAddressMode addressModeU) {
        internal_native_SetAddressModeU(native_address, (int) addressModeU.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetAddressModeU(addressModeU);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "addressModeU"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetAddressModeU(addressModeU);")
    public static native void internal_native_SetAddressModeU(int this_addr, int addressModeU);

    public void setAddressModeV(WGPUAddressMode addressModeV) {
        internal_native_SetAddressModeV(native_address, (int) addressModeV.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetAddressModeV(addressModeV);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "addressModeV"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetAddressModeV(addressModeV);")
    public static native void internal_native_SetAddressModeV(int this_addr, int addressModeV);

    public void setAddressModeW(WGPUAddressMode addressModeW) {
        internal_native_SetAddressModeW(native_address, (int) addressModeW.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetAddressModeW(addressModeW);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "addressModeW"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetAddressModeW(addressModeW);")
    public static native void internal_native_SetAddressModeW(int this_addr, int addressModeW);

    public void setMagFilter(WGPUFilterMode magFilter) {
        internal_native_SetMagFilter(native_address, (int) magFilter.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetMagFilter(magFilter);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "magFilter"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetMagFilter(magFilter);")
    public static native void internal_native_SetMagFilter(int this_addr, int magFilter);

    public void setMinFilter(WGPUFilterMode minFilter) {
        internal_native_SetMinFilter(native_address, (int) minFilter.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetMinFilter(minFilter);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "minFilter"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetMinFilter(minFilter);")
    public static native void internal_native_SetMinFilter(int this_addr, int minFilter);

    public void setMipmapFilter(WGPUMipmapFilterMode mipmapFilter) {
        internal_native_SetMipmapFilter(native_address, (int) mipmapFilter.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetMipmapFilter(mipmapFilter);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mipmapFilter"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetMipmapFilter(mipmapFilter);")
    public static native void internal_native_SetMipmapFilter(int this_addr, int mipmapFilter);

    public void setLodMinClamp(float lodMinClamp) {
        internal_native_SetLodMinClamp(native_address, lodMinClamp);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetLodMinClamp(lodMinClamp);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "lodMinClamp"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetLodMinClamp(lodMinClamp);")
    public static native void internal_native_SetLodMinClamp(int this_addr, float lodMinClamp);

    public void setLodMaxClamp(float lodMaxClamp) {
        internal_native_SetLodMaxClamp(native_address, lodMaxClamp);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetLodMaxClamp(lodMaxClamp);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "lodMaxClamp"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetLodMaxClamp(lodMaxClamp);")
    public static native void internal_native_SetLodMaxClamp(int this_addr, float lodMaxClamp);

    public void setCompare(WGPUCompareFunction compare) {
        internal_native_SetCompare(native_address, (int) compare.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetCompare(compare);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "compare"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetCompare(compare);")
    public static native void internal_native_SetCompare(int this_addr, int compare);

    public void setMaxAnisotropy(int maxAnisotropy) {
        internal_native_SetMaxAnisotropy(native_address, maxAnisotropy);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);
jsObj.SetMaxAnisotropy(maxAnisotropy);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "maxAnisotropy"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUSamplerDescriptor);jsObj.SetMaxAnisotropy(maxAnisotropy);")
    public static native void internal_native_SetMaxAnisotropy(int this_addr, int maxAnisotropy);
}
