/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUComputePipelineDescriptor extends IDLBase {

    static private WGPUComputePipelineDescriptor WGPUComputePipelineDescriptor_TEMP_STATIC_GEN_0;

    private WGPUProgrammableStageDescriptor WGPUProgrammableStageDescriptor_TEMP_GEN_0;

    static public final WGPUComputePipelineDescriptor NULL = WGPUComputePipelineDescriptor.createInstance();

    static public final WGPUComputePipelineDescriptor T_01 = WGPUComputePipelineDescriptor.createInstance();

    static public final WGPUComputePipelineDescriptor T_02 = WGPUComputePipelineDescriptor.createInstance();

    static public final WGPUComputePipelineDescriptor T_03 = WGPUComputePipelineDescriptor.createInstance();

    public WGPUComputePipelineDescriptor() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUComputePipelineDescriptor();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUComputePipelineDescriptor();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUComputePipelineDescriptor(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUComputePipelineDescriptor createInstance() {
        return new WGPUComputePipelineDescriptor((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUComputePipelineDescriptor obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUComputePipelineDescriptor_TEMP_STATIC_GEN_0 == null)
            WGPUComputePipelineDescriptor_TEMP_STATIC_GEN_0 = WGPUComputePipelineDescriptor.createInstance();
        WGPUComputePipelineDescriptor_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUComputePipelineDescriptor_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUComputePipelineDescriptor.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUComputePipelineDescriptor.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);
jsObj.SetLabel(label);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "label"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);jsObj.SetLabel(label);")
    public static native void internal_native_SetLabel(int this_addr, String label);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);
jsObj.SetNextInChain(chainedStruct_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "chainedStruct_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);jsObj.SetNextInChain(chainedStruct_addr);")
    public static native void internal_native_SetNextInChain(int this_addr, int chainedStruct_addr);

    public void setLayout(WGPUPipelineLayout layout) {
        internal_native_SetLayout(native_address, layout.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);
jsObj.SetLayout(layout_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "layout_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);jsObj.SetLayout(layout_addr);")
    public static native void internal_native_SetLayout(int this_addr, int layout_addr);

    public WGPUProgrammableStageDescriptor getCompute() {
        int pointer = internal_native_GetCompute(native_address);
        if (pointer == 0)
            return null;
        if (WGPUProgrammableStageDescriptor_TEMP_GEN_0 == null)
            WGPUProgrammableStageDescriptor_TEMP_GEN_0 = WGPUProgrammableStageDescriptor.createInstance();
        WGPUProgrammableStageDescriptor_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUProgrammableStageDescriptor_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);
var returnedJSObj = jsObj.GetCompute();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUComputePipelineDescriptor);var returnedJSObj = jsObj.GetCompute();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_GetCompute(int this_addr);
}
