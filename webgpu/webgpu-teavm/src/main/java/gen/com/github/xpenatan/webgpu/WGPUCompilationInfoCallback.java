/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUCompilationInfoCallback extends IDLBase {

    static private WGPUCompilationInfo WGPUCompilationInfo_TEMP_STATIC_GEN_0;

    static public final WGPUCompilationInfoCallback NULL = WGPUCompilationInfoCallback.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUCompilationInfoCallback(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUCompilationInfoCallback native_new() {
        return new WGPUCompilationInfoCallback((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUCompilationInfoCallbackImpl);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUCompilationInfoCallbackImpl);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public WGPUCompilationInfoCallback() {
        int addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        OnCallback OnCallback = new OnCallback() {

            public void OnCallback(int status_addr, int compilationInfo_addr) {
                internal_onCallback(status_addr, compilationInfo_addr);
            }
        };
        internal_native_setupCallback(native_address, OnCallback);
    }

    protected void onCallback(WGPUCompilationInfoRequestStatus status, WGPUCompilationInfo compilationInfo) {
    }

    private void internal_onCallback(int status_addr, int compilationInfo_addr) {
        WGPUCompilationInfoRequestStatus status_addr_enum = WGPUCompilationInfoRequestStatus.CUSTOM.setValue(status_addr);
        WGPUCompilationInfoRequestStatus[] status_addr_enum_values = WGPUCompilationInfoRequestStatus.values();
        for (int i = 0; i < status_addr_enum_values.length; i++) {
            WGPUCompilationInfoRequestStatus enumVal = status_addr_enum_values[i];
            if (enumVal != WGPUCompilationInfoRequestStatus.CUSTOM && enumVal.getValue() == status_addr) {
                status_addr_enum = status_addr_enum_values[i];
                break;
            }
        }
        if (WGPUCompilationInfo_TEMP_STATIC_GEN_0 == null)
            WGPUCompilationInfo_TEMP_STATIC_GEN_0 = WGPUCompilationInfo.native_new();
        WGPUCompilationInfo_TEMP_STATIC_GEN_0.internal_reset(compilationInfo_addr, false);
        onCallback(status_addr_enum, WGPUCompilationInfo_TEMP_STATIC_GEN_0);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUCompilationInfoCallbackImpl();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUCompilationInfoCallbackImpl();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    @org.teavm.jso.JSBody(params = { "this_addr", "OnCallback" }, script = "var WGPUCompilationInfoCallbackImpl = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUCompilationInfoCallbackImpl); WGPUCompilationInfoCallbackImpl.OnCallback = OnCallback;")
    public static native void internal_native_setupCallback(int this_addr, OnCallback OnCallback);

    @org.teavm.jso.JSFunctor()
    public interface OnCallback extends org.teavm.jso.JSObject {

        void OnCallback(int status_addr, int compilationInfo_addr);
    }
}
