/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package gen.com.github.xpenatan.webgpu;

import java.nio.ByteBuffer;
import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUBuffer extends IDLBase {

    private WGPUFuture WGPUFuture_TEMP_GEN_0;

    private WGPUByteBuffer WGPUByteBuffer_TEMP_GEN_0;

    @org.teavm.jso.JSBody(params = { "this_addr", "offset", "size", "bytes_addr" }, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer); var ptr = jWebGPU._malloc(size); jsObj.GetConstMappedRange(offset, size, ptr); var dataOut = jWebGPU.HEAPU8.subarray(ptr, ptr + size); bytes_addr.set(dataOut); jWebGPU._free(ptr);")
    private static native void internal_native_getConstMappedRange(int this_addr, int offset, int size, org.teavm.jso.JSObject bytes_addr);

    public final static WGPUBuffer NULL = createInstance();

    public static WGPUBuffer createInstance() {
        return new WGPUBuffer((byte) 0, (char) 0);
    }

    private WGPUBuffer(byte v, char c) {
    }

    @Override
        protected void onNativeAddressChanged() {
            int cPointer = native_address;
            native_object = internal_native_getJsObject(cPointer);
        }

        @org.teavm.jso.JSBody(params = { "this_addr" }, script = "" +
            "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);" +
            "var jsAddr = jsObj.Get();" +
            "var nativeObject = jWebGPU.WebGPU.getJsObject(jsAddr);" +
            "return nativeObject;"
        )
        private static native org.teavm.jso.JSObject internal_native_getJsObject(int this_addr);

    /*
      [-TEAVM;-REPLACE_BLOCK]
              {
                  org.teavm.jso.typedarrays.Int8Array array = org.teavm.jso.typedarrays.Int8Array.fromJavaBuffer(out);
                  internal_native_getConstMappedRange((int)native_address, offset, size, array);
              }
    */
    public void getConstMappedRange(int offset, int size, ByteBuffer out) {
        org.teavm.jso.typedarrays.Int8Array array = org.teavm.jso.typedarrays.Int8Array.fromJavaBuffer(out);
        internal_native_getConstMappedRange((int) native_address, offset, size, array);
    }

    /*
      [-TEAVM;-REPLACE]
              @org.teavm.jso.JSBody(params = {"this_addr", "offset", "size", "bytes_addr"}, script = "var jsObj = [MODULE].wrapPointer(this_addr, [MODULE].WGPUBuffer); var ptr = [MODULE]._malloc(size); jsObj.GetConstMappedRange(offset, size, ptr); var dataOut = [MODULE].HEAPU8.subarray(ptr, ptr + size); bytes_addr.set(dataOut); [MODULE]._free(ptr);")
              private static native void internal_native_getConstMappedRange(int this_addr, int offset, int size, org.teavm.jso.JSObject bytes_addr);
    */
    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      jWebGPU.destroy(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setLabel(String value) {
        internal_native_SetLabel(native_address, value);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      jsObj.SetLabel(value);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "value"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);jsObj.SetLabel(value);")
    public static native void internal_native_SetLabel(int this_addr, String value);

    public void release() {
        internal_native_Release(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      jsObj.Release();
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);jsObj.Release();")
    public static native void internal_native_Release(int this_addr);

    public void destroy() {
        internal_native_Destroy(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      jsObj.Destroy();
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);jsObj.Destroy();")
    public static native void internal_native_Destroy(int this_addr);

    public WGPUFuture mapAsync(WGPUMapMode mode, int offset, int size, WGPUCallbackMode callbackMode, BufferMapCallback callback) {
        int pointer = internal_native_MapAsync(native_address, (int) mode.getValue(), offset, size, (int) callbackMode.getValue(), callback.native_address);
        if (pointer == 0)
            return null;
        if (WGPUFuture_TEMP_GEN_0 == null)
            WGPUFuture_TEMP_GEN_0 = WGPUFuture.createInstance();
        WGPUFuture_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUFuture_TEMP_GEN_0;
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      var returnedJSObj = jsObj.MapAsync(mode, offset, size, callbackMode, callback_addr);
      if(!returnedJSObj.hasOwnProperty('ptr')) return 0;
      return jWebGPU.getPointer(returnedJSObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "mode", "offset", "size", "callbackMode", "callback_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);var returnedJSObj = jsObj.MapAsync(mode, offset, size, callbackMode, callback_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_MapAsync(int this_addr, int mode, int offset, int size, int callbackMode, int callback_addr);

    public WGPUByteBuffer getMappedRange(int offset, int size) {
        int pointer = internal_native_GetMappedRange(native_address, offset, size);
        if (pointer == 0)
            return null;
        if (WGPUByteBuffer_TEMP_GEN_0 == null)
            WGPUByteBuffer_TEMP_GEN_0 = WGPUByteBuffer.createInstance();
        WGPUByteBuffer_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUByteBuffer_TEMP_GEN_0;
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      var returnedJSObj = jsObj.GetMappedRange(offset, size);
      if(!returnedJSObj.hasOwnProperty('ptr')) return 0;
      return jWebGPU.getPointer(returnedJSObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "offset", "size"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);var returnedJSObj = jsObj.GetMappedRange(offset, size);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_GetMappedRange(int this_addr, int offset, int size);

    public void unmap() {
        internal_native_Unmap(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      jsObj.Unmap();
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);jsObj.Unmap();")
    public static native void internal_native_Unmap(int this_addr);

    public int getSize() {
        return internal_native_GetSize(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      var returnedJSObj = jsObj.GetSize();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);var returnedJSObj = jsObj.GetSize();return returnedJSObj;")
    public static native int internal_native_GetSize(int this_addr);

    public WGPUBufferUsage getUsage() {
        int value = internal_native_GetUsage(native_address);
        return WGPUBufferUsage.MAP.get(value);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      var returnedJSObj = jsObj.GetUsage();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);var returnedJSObj = jsObj.GetUsage();return returnedJSObj;")
    public static native int internal_native_GetUsage(int this_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);
      var returnedJSObj = jsObj.IsValid();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBuffer);var returnedJSObj = jsObj.IsValid();return returnedJSObj;")
    public static native boolean internal_native_IsValid(int this_addr);
}
