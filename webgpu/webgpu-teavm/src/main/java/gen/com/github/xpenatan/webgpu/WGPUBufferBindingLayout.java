/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUBufferBindingLayout extends IDLBase {

    static private WGPUBufferBindingLayout WGPUBufferBindingLayout_TEMP_STATIC_GEN_0;

    static public final WGPUBufferBindingLayout NULL = WGPUBufferBindingLayout.createInstance();

    static public final WGPUBufferBindingLayout T_01 = WGPUBufferBindingLayout.createInstance();

    static public final WGPUBufferBindingLayout T_02 = WGPUBufferBindingLayout.createInstance();

    static public final WGPUBufferBindingLayout T_03 = WGPUBufferBindingLayout.createInstance();

    public WGPUBufferBindingLayout() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUBufferBindingLayout();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUBufferBindingLayout();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUBufferBindingLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUBufferBindingLayout createInstance() {
        return new WGPUBufferBindingLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUBufferBindingLayout obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUBufferBindingLayout_TEMP_STATIC_GEN_0 == null)
            WGPUBufferBindingLayout_TEMP_STATIC_GEN_0 = WGPUBufferBindingLayout.createInstance();
        WGPUBufferBindingLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUBufferBindingLayout_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUBufferBindingLayout.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUBufferBindingLayout.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);
jsObj.SetNextInChain(chainedStruct_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "chainedStruct_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);jsObj.SetNextInChain(chainedStruct_addr);")
    public static native void internal_native_SetNextInChain(int this_addr, int chainedStruct_addr);

    public void setType(WGPUBufferBindingType type) {
        internal_native_SetType(native_address, (int) type.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);
jsObj.SetType(type);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "type"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);jsObj.SetType(type);")
    public static native void internal_native_SetType(int this_addr, int type);

    public void setHasDynamicOffset(int hasDynamicOffset) {
        internal_native_SetHasDynamicOffset(native_address, hasDynamicOffset);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);
jsObj.SetHasDynamicOffset(hasDynamicOffset);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "hasDynamicOffset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);jsObj.SetHasDynamicOffset(hasDynamicOffset);")
    public static native void internal_native_SetHasDynamicOffset(int this_addr, int hasDynamicOffset);

    public void setMinBindingSize(int minBindingSize) {
        internal_native_SetMinBindingSize(native_address, minBindingSize);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);
jsObj.SetMinBindingSize(minBindingSize);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "minBindingSize"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUBufferBindingLayout);jsObj.SetMinBindingSize(minBindingSize);")
    public static native void internal_native_SetMinBindingSize(int this_addr, int minBindingSize);
}
