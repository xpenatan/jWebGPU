/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUTexelCopyBufferLayout extends IDLBase {

    static private WGPUTexelCopyBufferLayout WGPUTexelCopyBufferLayout_TEMP_STATIC_GEN_0;

    public final static WGPUTexelCopyBufferLayout NULL = createInstance();

    public static WGPUTexelCopyBufferLayout createInstance() {
        return new WGPUTexelCopyBufferLayout((byte) 0, (char) 0);
    }

    private WGPUTexelCopyBufferLayout(byte v, char c) {
    }

    public WGPUTexelCopyBufferLayout() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = new jWebGPU.WGPUTexelCopyBufferLayout();
      return jWebGPU.getPointer(jsObj);
    */
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUTexelCopyBufferLayout();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);
      jWebGPU.destroy(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUTexelCopyBufferLayout obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUTexelCopyBufferLayout_TEMP_STATIC_GEN_0 == null)
            WGPUTexelCopyBufferLayout_TEMP_STATIC_GEN_0 = WGPUTexelCopyBufferLayout.createInstance();
        WGPUTexelCopyBufferLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUTexelCopyBufferLayout_TEMP_STATIC_GEN_0;
    }

    /*
      [-TEAVM;-NATIVE]
      var returnedJSObj = jWebGPU.WGPUTexelCopyBufferLayout.prototype.Obtain();
      if(!returnedJSObj.hasOwnProperty('ptr')) return 0;
      return jWebGPU.getPointer(returnedJSObj);
    */
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUTexelCopyBufferLayout.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setOffset(int offset) {
        internal_native_SetOffset(native_address, offset);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);
      jsObj.SetOffset(offset);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "offset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);jsObj.SetOffset(offset);")
    public static native void internal_native_SetOffset(int this_addr, int offset);

    public void setBytesPerRow(int bytesPerRow) {
        internal_native_SetBytesPerRow(native_address, bytesPerRow);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);
      jsObj.SetBytesPerRow(bytesPerRow);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "bytesPerRow"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);jsObj.SetBytesPerRow(bytesPerRow);")
    public static native void internal_native_SetBytesPerRow(int this_addr, int bytesPerRow);

    public void setRowsPerImage(int rowsPerImage) {
        internal_native_SetRowsPerImage(native_address, rowsPerImage);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);
      jsObj.SetRowsPerImage(rowsPerImage);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "rowsPerImage"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTexelCopyBufferLayout);jsObj.SetRowsPerImage(rowsPerImage);")
    public static native void internal_native_SetRowsPerImage(int this_addr, int rowsPerImage);
}
