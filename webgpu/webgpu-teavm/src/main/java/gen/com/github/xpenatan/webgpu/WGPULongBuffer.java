/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPULongBuffer extends IDLBase {

    private WGPUByteBuffer WGPUByteBuffer_TEMP_GEN_0;

    static public final WGPULongBuffer NULL = WGPULongBuffer.createInstance();

    static public final WGPULongBuffer T_01 = WGPULongBuffer.createInstance();

    static public final WGPULongBuffer T_02 = WGPULongBuffer.createInstance();

    static public final WGPULongBuffer T_03 = WGPULongBuffer.createInstance();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPULongBuffer(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPULongBuffer createInstance() {
        return new WGPULongBuffer((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public WGPUByteBuffer getByteBuffer() {
        int pointer = internal_native_getByteBuffer(native_address);
        if (pointer == 0)
            return null;
        if (WGPUByteBuffer_TEMP_GEN_0 == null)
            WGPUByteBuffer_TEMP_GEN_0 = WGPUByteBuffer.createInstance();
        WGPUByteBuffer_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUByteBuffer_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.getByteBuffer();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.getByteBuffer();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_getByteBuffer(int this_addr);

    public void put(long value) {
        internal_native_put_0(native_address, (int) value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jsObj.put_0(value);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "value"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jsObj.put_0(value);")
    public static native void internal_native_put_0(int this_addr, int value);

    public void put(int index, long value) {
        internal_native_put_1(native_address, index, (int) value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jsObj.put_1(index, value);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "index", "value"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jsObj.put_1(index, value);")
    public static native void internal_native_put_1(int this_addr, int index, int value);

    public long get(int index) {
        return internal_native_get(native_address, index);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.get(index);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "index"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.get(index);return returnedJSObj;")
    public static native int internal_native_get(int this_addr, int index);

    public long get() {
        return internal_native_get(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.get();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.get();return returnedJSObj;")
    public static native int internal_native_get(int this_addr);

    public int remaining() {
        return internal_native_remaining(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.remaining();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.remaining();return returnedJSObj;")
    public static native int internal_native_remaining(int this_addr);

    public int getCapacity() {
        return internal_native_getCapacity(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.getCapacity();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.getCapacity();return returnedJSObj;")
    public static native int internal_native_getCapacity(int this_addr);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jsObj.clear();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jsObj.clear();")
    public static native void internal_native_clear(int this_addr);

    public void limit(int newLimit) {
        internal_native_limit(native_address, newLimit);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jsObj.limit(newLimit);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "newLimit"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jsObj.limit(newLimit);")
    public static native void internal_native_limit(int this_addr, int newLimit);

    public int getLimit() {
        return internal_native_getLimit(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.getLimit();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.getLimit();return returnedJSObj;")
    public static native int internal_native_getLimit(int this_addr);

    public void position(int newPosition) {
        internal_native_position(native_address, newPosition);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jsObj.position(newPosition);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "newPosition"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jsObj.position(newPosition);")
    public static native void internal_native_position(int this_addr, int newPosition);

    public int getPosition() {
        return internal_native_getPosition(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
var returnedJSObj = jsObj.getPosition();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);var returnedJSObj = jsObj.getPosition();return returnedJSObj;")
    public static native int internal_native_getPosition(int this_addr);

    public void flip() {
        internal_native_flip(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);
jsObj.flip();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPULongBuffer);jsObj.flip();")
    public static native void internal_native_flip(int this_addr);
}
