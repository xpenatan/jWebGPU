/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUVertexBufferLayout extends IDLBase {

    static private WGPUVertexBufferLayout WGPUVertexBufferLayout_TEMP_STATIC_GEN_0;

    static public final WGPUVertexBufferLayout NULL = WGPUVertexBufferLayout.native_new();

    public WGPUVertexBufferLayout() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUVertexBufferLayout();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUVertexBufferLayout();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUVertexBufferLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUVertexBufferLayout native_new() {
        return new WGPUVertexBufferLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setAttributes(WGPUVectorVertexAttribute values) {
        internal_native_SetAttributes(native_address, values.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);
jsObj.SetAttributes(values_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "values_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);jsObj.SetAttributes(values_addr);")
    public static native void internal_native_SetAttributes(int this_addr, int values_addr);

    public void setArrayStride(int offset) {
        internal_native_SetArrayStride(native_address, offset);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);
jsObj.SetArrayStride(offset);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "offset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);jsObj.SetArrayStride(offset);")
    public static native void internal_native_SetArrayStride(int this_addr, int offset);

    public void setStepMode(WGPUVertexStepMode stepMode) {
        internal_native_SetStepMode(native_address, stepMode.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);
jsObj.SetStepMode(stepMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "stepMode"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexBufferLayout);jsObj.SetStepMode(stepMode);")
    public static native void internal_native_SetStepMode(int this_addr, int stepMode);

    public static WGPUVertexBufferLayout obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUVertexBufferLayout.NULL;
        if (WGPUVertexBufferLayout_TEMP_STATIC_GEN_0 == null)
            WGPUVertexBufferLayout_TEMP_STATIC_GEN_0 = WGPUVertexBufferLayout.native_new();
        WGPUVertexBufferLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUVertexBufferLayout_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUVertexBufferLayout.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUVertexBufferLayout.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();
}
