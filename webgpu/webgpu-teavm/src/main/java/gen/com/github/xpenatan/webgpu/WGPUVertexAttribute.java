/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUVertexAttribute extends IDLBase {

    static private WGPUVertexAttribute WGPUVertexAttribute_TEMP_STATIC_GEN_0;

    static public final WGPUVertexAttribute NULL = WGPUVertexAttribute.native_new();

    public WGPUVertexAttribute() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUVertexAttribute();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUVertexAttribute();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUVertexAttribute(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUVertexAttribute native_new() {
        return new WGPUVertexAttribute((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setFormat(WGPUVertexFormat format) {
        internal_native_SetFormat(native_address, format.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);
jsObj.SetFormat(format);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "format"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);jsObj.SetFormat(format);")
    public static native void internal_native_SetFormat(int this_addr, int format);

    public void setOffset(int offset) {
        internal_native_SetOffset(native_address, offset);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);
jsObj.SetOffset(offset);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "offset"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);jsObj.SetOffset(offset);")
    public static native void internal_native_SetOffset(int this_addr, int offset);

    public void setShaderLocation(int shaderLocation) {
        internal_native_SetShaderLocation(native_address, shaderLocation);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);
jsObj.SetShaderLocation(shaderLocation);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "shaderLocation"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUVertexAttribute);jsObj.SetShaderLocation(shaderLocation);")
    public static native void internal_native_SetShaderLocation(int this_addr, int shaderLocation);

    public static WGPUVertexAttribute obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUVertexAttribute.NULL;
        if (WGPUVertexAttribute_TEMP_STATIC_GEN_0 == null)
            WGPUVertexAttribute_TEMP_STATIC_GEN_0 = WGPUVertexAttribute.native_new();
        WGPUVertexAttribute_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUVertexAttribute_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUVertexAttribute.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUVertexAttribute.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();
}
