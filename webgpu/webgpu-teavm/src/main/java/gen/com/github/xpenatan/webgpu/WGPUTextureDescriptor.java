/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.com.github.xpenatan.webgpu;

import gen.com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUTextureDescriptor extends IDLBase {

    static private WGPUTextureDescriptor WGPUTextureDescriptor_TEMP_STATIC_GEN_0;

    private WGPUExtent3D WGPUExtent3D_TEMP_GEN_0;

    static public final WGPUTextureDescriptor NULL = WGPUTextureDescriptor.createInstance();

    static public final WGPUTextureDescriptor T_01 = WGPUTextureDescriptor.createInstance();

    static public final WGPUTextureDescriptor T_02 = WGPUTextureDescriptor.createInstance();

    static public final WGPUTextureDescriptor T_03 = WGPUTextureDescriptor.createInstance();

    public WGPUTextureDescriptor() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jWebGPU.WGPUTextureDescriptor();
return jWebGPU.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jWebGPU.WGPUTextureDescriptor();return jWebGPU.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUTextureDescriptor(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUTextureDescriptor createInstance() {
        return new WGPUTextureDescriptor((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jWebGPU.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jWebGPU.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public static WGPUTextureDescriptor obtain() {
        int pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUTextureDescriptor_TEMP_STATIC_GEN_0 == null)
            WGPUTextureDescriptor_TEMP_STATIC_GEN_0 = WGPUTextureDescriptor.createInstance();
        WGPUTextureDescriptor_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUTextureDescriptor_TEMP_STATIC_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var returnedJSObj = jWebGPU.WGPUTextureDescriptor.prototype.Obtain();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(script = "var returnedJSObj = jWebGPU.WGPUTextureDescriptor.prototype.Obtain();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_Obtain();

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetNextInChain(chainedStruct_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "chainedStruct_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetNextInChain(chainedStruct_addr);")
    public static native void internal_native_SetNextInChain(int this_addr, int chainedStruct_addr);

    public void setLabel(String value) {
        internal_native_SetLabel(native_address, value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetLabel(value);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "value"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetLabel(value);")
    public static native void internal_native_SetLabel(int this_addr, String value);

    public void setUsage(WGPUTextureUsage usage) {
        internal_native_SetUsage(native_address, (int) usage.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetUsage(usage);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "usage"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetUsage(usage);")
    public static native void internal_native_SetUsage(int this_addr, int usage);

    public void setDimension(WGPUTextureDimension dimension) {
        internal_native_SetDimension(native_address, (int) dimension.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetDimension(dimension);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "dimension"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetDimension(dimension);")
    public static native void internal_native_SetDimension(int this_addr, int dimension);

    public WGPUExtent3D getSize() {
        int pointer = internal_native_GetSize(native_address);
        if (pointer == 0)
            return null;
        if (WGPUExtent3D_TEMP_GEN_0 == null)
            WGPUExtent3D_TEMP_GEN_0 = WGPUExtent3D.createInstance();
        WGPUExtent3D_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUExtent3D_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
var returnedJSObj = jsObj.GetSize();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jWebGPU.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);var returnedJSObj = jsObj.GetSize();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jWebGPU.getPointer(returnedJSObj);")
    public static native int internal_native_GetSize(int this_addr);

    public void setFormat(WGPUTextureFormat format) {
        internal_native_SetFormat(native_address, (int) format.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetFormat(format);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "format"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetFormat(format);")
    public static native void internal_native_SetFormat(int this_addr, int format);

    public void setMipLevelCount(int mipLevelCount) {
        internal_native_SetMipLevelCount(native_address, mipLevelCount);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetMipLevelCount(mipLevelCount);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mipLevelCount"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetMipLevelCount(mipLevelCount);")
    public static native void internal_native_SetMipLevelCount(int this_addr, int mipLevelCount);

    public void setSampleCount(int sampleCount) {
        internal_native_SetSampleCount(native_address, sampleCount);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetSampleCount(sampleCount);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "sampleCount"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetSampleCount(sampleCount);")
    public static native void internal_native_SetSampleCount(int this_addr, int sampleCount);

    public void setViewFormats(WGPUVectorTextureFormat viewFormats) {
        internal_native_SetViewFormats(native_address, viewFormats.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);
jsObj.SetViewFormats(viewFormats_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "viewFormats_addr"}, script = "var jsObj = jWebGPU.wrapPointer(this_addr, jWebGPU.WGPUTextureDescriptor);jsObj.SetViewFormats(viewFormats_addr);")
    public static native void internal_native_SetViewFormats(int this_addr, int viewFormats_addr);
}
