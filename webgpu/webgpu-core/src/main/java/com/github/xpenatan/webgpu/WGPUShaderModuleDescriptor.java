/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUShaderModuleDescriptor extends IDLBase {

    static private WGPUShaderModuleDescriptor WGPUShaderModuleDescriptor_TEMP_STATIC_GEN_0;

    static public final WGPUShaderModuleDescriptor NULL = WGPUShaderModuleDescriptor.native_new();

    public WGPUShaderModuleDescriptor() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUShaderModuleDescriptor();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUShaderModuleDescriptor(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUShaderModuleDescriptor native_new() {
        return new WGPUShaderModuleDescriptor((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModuleDescriptor* nativeObject = (JGPU::WGPUShaderModuleDescriptor*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setLabel(String value) {
        internal_native_SetLabel(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModuleDescriptor* nativeObject = (JGPU::WGPUShaderModuleDescriptor*)this_addr;
nativeObject->SetLabel(value);
*/
    public static native void internal_native_SetLabel(long this_addr, String value);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModuleDescriptor* nativeObject = (JGPU::WGPUShaderModuleDescriptor*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public static WGPUShaderModuleDescriptor obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUShaderModuleDescriptor.NULL;
        if (WGPUShaderModuleDescriptor_TEMP_STATIC_GEN_0 == null)
            WGPUShaderModuleDescriptor_TEMP_STATIC_GEN_0 = WGPUShaderModuleDescriptor.native_new();
        WGPUShaderModuleDescriptor_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUShaderModuleDescriptor_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUShaderModuleDescriptor::Obtain();
*/
    public static native long internal_native_Obtain();
}
