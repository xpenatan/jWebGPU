/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.jParser.idl.IDLEnum;

public enum WGPUSType implements IDLEnum<WGPUSType> {

    CUSTOM(0),
    ShaderSourceSPIRV(WGPUSType_ShaderSourceSPIRV_NATIVE()),
    ShaderSourceWGSL(WGPUSType_ShaderSourceWGSL_NATIVE()),
    RenderPassMaxDrawCount(WGPUSType_RenderPassMaxDrawCount_NATIVE()),
    SurfaceSourceMetalLayer(WGPUSType_SurfaceSourceMetalLayer_NATIVE()),
    SurfaceSourceWindowsHWND(WGPUSType_SurfaceSourceWindowsHWND_NATIVE()),
    SurfaceSourceXlibWindow(WGPUSType_SurfaceSourceXlibWindow_NATIVE()),
    SurfaceSourceWaylandSurface(WGPUSType_SurfaceSourceWaylandSurface_NATIVE()),
    SurfaceSourceAndroidNativeWindow(WGPUSType_SurfaceSourceAndroidNativeWindow_NATIVE()),
    SurfaceSourceXCBWindow(WGPUSType_SurfaceSourceXCBWindow_NATIVE()),
    Force32(WGPUSType_Force32_NATIVE());

    private int value;

    private WGPUSType(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUSType setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUSType getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, WGPUSType> MAP = new HashMap<>();

    static {
        for (WGPUSType value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_ShaderSourceSPIRV;
*/
    private static native int WGPUSType_ShaderSourceSPIRV_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_ShaderSourceWGSL;
*/
    private static native int WGPUSType_ShaderSourceWGSL_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_RenderPassMaxDrawCount;
*/
    private static native int WGPUSType_RenderPassMaxDrawCount_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_SurfaceSourceMetalLayer;
*/
    private static native int WGPUSType_SurfaceSourceMetalLayer_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_SurfaceSourceWindowsHWND;
*/
    private static native int WGPUSType_SurfaceSourceWindowsHWND_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_SurfaceSourceXlibWindow;
*/
    private static native int WGPUSType_SurfaceSourceXlibWindow_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_SurfaceSourceWaylandSurface;
*/
    private static native int WGPUSType_SurfaceSourceWaylandSurface_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_SurfaceSourceAndroidNativeWindow;
*/
    private static native int WGPUSType_SurfaceSourceAndroidNativeWindow_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_SurfaceSourceXCBWindow;
*/
    private static native int WGPUSType_SurfaceSourceXCBWindow_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSType_Force32;
*/
    private static native int WGPUSType_Force32_NATIVE();
}
