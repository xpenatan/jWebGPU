/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUTextureBindingLayout extends IDLBase {

    static private WGPUTextureBindingLayout WGPUTextureBindingLayout_TEMP_STATIC_GEN_0;

    static public final WGPUTextureBindingLayout NULL = WGPUTextureBindingLayout.native_new();

    public WGPUTextureBindingLayout() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUTextureBindingLayout();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUTextureBindingLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUTextureBindingLayout native_new() {
        return new WGPUTextureBindingLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTextureBindingLayout* nativeObject = (JGPU::WGPUTextureBindingLayout*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTextureBindingLayout* nativeObject = (JGPU::WGPUTextureBindingLayout*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public void setSampleType(WGPUTextureSampleType sampleType) {
        internal_native_SetSampleType(native_address, sampleType.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTextureBindingLayout* nativeObject = (JGPU::WGPUTextureBindingLayout*)this_addr;
nativeObject->SetSampleType((::WGPUTextureSampleType)sampleType);
*/
    public static native void internal_native_SetSampleType(long this_addr, int sampleType);

    public void setViewDimension(WGPUTextureViewDimension viewDimension) {
        internal_native_SetViewDimension(native_address, viewDimension.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTextureBindingLayout* nativeObject = (JGPU::WGPUTextureBindingLayout*)this_addr;
nativeObject->SetViewDimension((::WGPUTextureViewDimension)viewDimension);
*/
    public static native void internal_native_SetViewDimension(long this_addr, int viewDimension);

    public void setMultisampled(int multisampled) {
        internal_native_SetMultisampled(native_address, multisampled);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTextureBindingLayout* nativeObject = (JGPU::WGPUTextureBindingLayout*)this_addr;
nativeObject->SetMultisampled((int)multisampled);
*/
    public static native void internal_native_SetMultisampled(long this_addr, int multisampled);

    public static WGPUTextureBindingLayout obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUTextureBindingLayout.NULL;
        if (WGPUTextureBindingLayout_TEMP_STATIC_GEN_0 == null)
            WGPUTextureBindingLayout_TEMP_STATIC_GEN_0 = WGPUTextureBindingLayout.native_new();
        WGPUTextureBindingLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUTextureBindingLayout_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUTextureBindingLayout::Obtain();
*/
    public static native long internal_native_Obtain();
}
