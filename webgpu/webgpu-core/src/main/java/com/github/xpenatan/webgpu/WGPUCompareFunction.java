/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.webgpu.idl.IDLEnum;

public enum WGPUCompareFunction implements IDLEnum<WGPUCompareFunction> {

    CUSTOM(0),
    Undefined(WGPUCompareFunction_Undefined_NATIVE()),
    Never(WGPUCompareFunction_Never_NATIVE()),
    Less(WGPUCompareFunction_Less_NATIVE()),
    Equal(WGPUCompareFunction_Equal_NATIVE()),
    LessEqual(WGPUCompareFunction_LessEqual_NATIVE()),
    Greater(WGPUCompareFunction_Greater_NATIVE()),
    NotEqual(WGPUCompareFunction_NotEqual_NATIVE()),
    GreaterEqual(WGPUCompareFunction_GreaterEqual_NATIVE()),
    Always(WGPUCompareFunction_Always_NATIVE()),
    Force32(WGPUCompareFunction_Force32_NATIVE());

    private int value;

    private WGPUCompareFunction(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUCompareFunction setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUCompareFunction getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, WGPUCompareFunction> MAP = new HashMap<>();

    static {
        for (WGPUCompareFunction value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Undefined;
*/
    private static native int WGPUCompareFunction_Undefined_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Never;
*/
    private static native int WGPUCompareFunction_Never_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Less;
*/
    private static native int WGPUCompareFunction_Less_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Equal;
*/
    private static native int WGPUCompareFunction_Equal_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_LessEqual;
*/
    private static native int WGPUCompareFunction_LessEqual_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Greater;
*/
    private static native int WGPUCompareFunction_Greater_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_NotEqual;
*/
    private static native int WGPUCompareFunction_NotEqual_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_GreaterEqual;
*/
    private static native int WGPUCompareFunction_GreaterEqual_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Always;
*/
    private static native int WGPUCompareFunction_Always_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUCompareFunction_Force32;
*/
    private static native int WGPUCompareFunction_Force32_NATIVE();
}
