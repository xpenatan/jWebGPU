/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.webgpu.idl.IDLEnum;

public enum WGPUStorageTextureAccess implements IDLEnum<WGPUStorageTextureAccess> {

    CUSTOM(0),
    BindingNotUsed(WGPUStorageTextureAccess_BindingNotUsed_NATIVE()),
    Undefined(WGPUStorageTextureAccess_Undefined_NATIVE()),
    WriteOnly(WGPUStorageTextureAccess_WriteOnly_NATIVE()),
    ReadOnly(WGPUStorageTextureAccess_ReadOnly_NATIVE()),
    ReadWrite(WGPUStorageTextureAccess_ReadWrite_NATIVE()),
    Force32(WGPUStorageTextureAccess_Force32_NATIVE());

    private int value;

    private WGPUStorageTextureAccess(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUStorageTextureAccess setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUStorageTextureAccess getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, WGPUStorageTextureAccess> MAP = new HashMap<>();

    static {
        for (WGPUStorageTextureAccess value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUStorageTextureAccess_BindingNotUsed;
*/
    private static native int WGPUStorageTextureAccess_BindingNotUsed_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUStorageTextureAccess_Undefined;
*/
    private static native int WGPUStorageTextureAccess_Undefined_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUStorageTextureAccess_WriteOnly;
*/
    private static native int WGPUStorageTextureAccess_WriteOnly_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUStorageTextureAccess_ReadOnly;
*/
    private static native int WGPUStorageTextureAccess_ReadOnly_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUStorageTextureAccess_ReadWrite;
*/
    private static native int WGPUStorageTextureAccess_ReadWrite_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUStorageTextureAccess_Force32;
*/
    private static native int WGPUStorageTextureAccess_Force32_NATIVE();
}
