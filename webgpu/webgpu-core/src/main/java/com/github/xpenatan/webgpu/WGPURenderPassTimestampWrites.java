/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPURenderPassTimestampWrites extends IDLBase {

    static private WGPURenderPassTimestampWrites WGPURenderPassTimestampWrites_TEMP_STATIC_GEN_0;

    static public final WGPURenderPassTimestampWrites NULL = WGPURenderPassTimestampWrites.createInstance();

    static public final WGPURenderPassTimestampWrites T_01 = WGPURenderPassTimestampWrites.createInstance();

    static public final WGPURenderPassTimestampWrites T_02 = WGPURenderPassTimestampWrites.createInstance();

    static public final WGPURenderPassTimestampWrites T_03 = WGPURenderPassTimestampWrites.createInstance();

    public WGPURenderPassTimestampWrites() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPURenderPassTimestampWrites();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPURenderPassTimestampWrites(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPURenderPassTimestampWrites createInstance() {
        return new WGPURenderPassTimestampWrites((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassTimestampWrites* nativeObject = (JGPU::WGPURenderPassTimestampWrites*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPURenderPassTimestampWrites obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPURenderPassTimestampWrites_TEMP_STATIC_GEN_0 == null)
            WGPURenderPassTimestampWrites_TEMP_STATIC_GEN_0 = WGPURenderPassTimestampWrites.createInstance();
        WGPURenderPassTimestampWrites_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPURenderPassTimestampWrites_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPURenderPassTimestampWrites::Obtain();
*/
    public static native long internal_native_Obtain();

    public void setQuerySet(WGPUQuerySet value) {
        internal_native_SetQuerySet(native_address, value.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassTimestampWrites* nativeObject = (JGPU::WGPURenderPassTimestampWrites*)this_addr;
nativeObject->SetQuerySet((JGPU::WGPUQuerySet* )value_addr);
*/
    public static native void internal_native_SetQuerySet(long this_addr, long value_addr);

    public void setBeginningOfPassWriteIndex(int value) {
        internal_native_SetBeginningOfPassWriteIndex(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassTimestampWrites* nativeObject = (JGPU::WGPURenderPassTimestampWrites*)this_addr;
nativeObject->SetBeginningOfPassWriteIndex((int)value);
*/
    public static native void internal_native_SetBeginningOfPassWriteIndex(long this_addr, int value);

    public void setEndOfPassWriteIndex(int value) {
        internal_native_SetEndOfPassWriteIndex(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassTimestampWrites* nativeObject = (JGPU::WGPURenderPassTimestampWrites*)this_addr;
nativeObject->SetEndOfPassWriteIndex((int)value);
*/
    public static native void internal_native_SetEndOfPassWriteIndex(long this_addr, int value);
}
