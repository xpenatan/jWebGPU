/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUBlendComponent extends IDLBase {

    static public final WGPUBlendComponent NULL = WGPUBlendComponent.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUBlendComponent(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUBlendComponent native_new() {
        return new WGPUBlendComponent((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setOperation(WGPUBlendOperation operation) {
        internal_native_SetOperation(native_address, operation.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
nativeObject->SetOperation((::WGPUBlendOperation)operation);
*/
    public static native void internal_native_SetOperation(long this_addr, long operation);

    public WGPUBlendOperation getOperation() {
        int value = internal_native_GetOperation(native_address);
        WGPUBlendOperation[] values = WGPUBlendOperation.values();
        for (int i = 0; i < values.length; i++) {
            WGPUBlendOperation enumVal = values[i];
            if (enumVal != WGPUBlendOperation.CUSTOM && enumVal.getValue() == value)
                return enumVal;
        }
        return WGPUBlendOperation.CUSTOM.setValue(value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
return (int)nativeObject->GetOperation();
*/
    public static native int internal_native_GetOperation(long this_addr);

    public void setSrcFactor(WGPUBlendFactor factor) {
        internal_native_SetSrcFactor(native_address, factor.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
nativeObject->SetSrcFactor((::WGPUBlendFactor)factor);
*/
    public static native void internal_native_SetSrcFactor(long this_addr, long factor);

    public WGPUBlendFactor getSrcFactor() {
        int value = internal_native_GetSrcFactor(native_address);
        WGPUBlendFactor[] values = WGPUBlendFactor.values();
        for (int i = 0; i < values.length; i++) {
            WGPUBlendFactor enumVal = values[i];
            if (enumVal != WGPUBlendFactor.CUSTOM && enumVal.getValue() == value)
                return enumVal;
        }
        return WGPUBlendFactor.CUSTOM.setValue(value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
return (int)nativeObject->GetSrcFactor();
*/
    public static native int internal_native_GetSrcFactor(long this_addr);

    public void setDstFactor(WGPUBlendFactor factor) {
        internal_native_SetDstFactor(native_address, factor.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
nativeObject->SetDstFactor((::WGPUBlendFactor)factor);
*/
    public static native void internal_native_SetDstFactor(long this_addr, long factor);

    public WGPUBlendFactor getDstFactor() {
        int value = internal_native_GetDstFactor(native_address);
        WGPUBlendFactor[] values = WGPUBlendFactor.values();
        for (int i = 0; i < values.length; i++) {
            WGPUBlendFactor enumVal = values[i];
            if (enumVal != WGPUBlendFactor.CUSTOM && enumVal.getValue() == value)
                return enumVal;
        }
        return WGPUBlendFactor.CUSTOM.setValue(value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBlendComponent* nativeObject = (JGPU::WGPUBlendComponent*)this_addr;
return (int)nativeObject->GetDstFactor();
*/
    public static native int internal_native_GetDstFactor(long this_addr);
}
