/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.webgpu.idl.IDLEnum;

public enum WGPUErrorType implements IDLEnum<WGPUErrorType> {

    CUSTOM(0),
    NoError(WGPUErrorType_NoError_NATIVE()),
    Validation(WGPUErrorType_Validation_NATIVE()),
    OutOfMemory(WGPUErrorType_OutOfMemory_NATIVE()),
    Internal(WGPUErrorType_Internal_NATIVE()),
    Unknown(WGPUErrorType_Unknown_NATIVE()),
    Force32(WGPUErrorType_Force32_NATIVE());

    private int value;

    private WGPUErrorType(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUErrorType setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUErrorType getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, WGPUErrorType> MAP = new HashMap<>();

    static {
        for (WGPUErrorType value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUErrorType_NoError;
*/
    private static native int WGPUErrorType_NoError_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUErrorType_Validation;
*/
    private static native int WGPUErrorType_Validation_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUErrorType_OutOfMemory;
*/
    private static native int WGPUErrorType_OutOfMemory_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUErrorType_Internal;
*/
    private static native int WGPUErrorType_Internal_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUErrorType_Unknown;
*/
    private static native int WGPUErrorType_Unknown_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUErrorType_Force32;
*/
    private static native int WGPUErrorType_Force32_NATIVE();
}
