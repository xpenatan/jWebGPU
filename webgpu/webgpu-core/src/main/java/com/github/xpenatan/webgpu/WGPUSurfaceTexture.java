/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUSurfaceTexture extends IDLBase {

    static private WGPUSurfaceTexture WGPUSurfaceTexture_TEMP_STATIC_GEN_0;

    static public final WGPUSurfaceTexture NULL = WGPUSurfaceTexture.native_new();

    static public final WGPUSurfaceTexture T_01 = WGPUSurfaceTexture.native_new();

    static public final WGPUSurfaceTexture T_02 = WGPUSurfaceTexture.native_new();

    static public final WGPUSurfaceTexture T_03 = WGPUSurfaceTexture.native_new();

    public WGPUSurfaceTexture() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUSurfaceTexture();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUSurfaceTexture(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUSurfaceTexture native_new() {
        return new WGPUSurfaceTexture((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUSurfaceTexture* nativeObject = (JGPU::WGPUSurfaceTexture*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUSurfaceTexture obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUSurfaceTexture.NULL;
        if (WGPUSurfaceTexture_TEMP_STATIC_GEN_0 == null)
            WGPUSurfaceTexture_TEMP_STATIC_GEN_0 = WGPUSurfaceTexture.native_new();
        WGPUSurfaceTexture_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUSurfaceTexture_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUSurfaceTexture::Obtain();
*/
    public static native long internal_native_Obtain();

    public void getTexture(WGPUTexture texture) {
        internal_native_GetTexture(native_address, texture.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUSurfaceTexture* nativeObject = (JGPU::WGPUSurfaceTexture*)this_addr;
nativeObject->GetTexture((JGPU::WGPUTexture* )texture_addr);
*/
    public static native void internal_native_GetTexture(long this_addr, long texture_addr);

    public WGPUSurfaceGetCurrentTextureStatus getStatus() {
        int value = internal_native_GetStatus(native_address);
        return WGPUSurfaceGetCurrentTextureStatus.MAP.get(value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUSurfaceTexture* nativeObject = (JGPU::WGPUSurfaceTexture*)this_addr;
return (int)nativeObject->GetStatus();
*/
    public static native int internal_native_GetStatus(long this_addr);
}
