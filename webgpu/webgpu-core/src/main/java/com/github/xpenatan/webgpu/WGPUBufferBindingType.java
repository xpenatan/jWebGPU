/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLEnum;

public enum WGPUBufferBindingType implements IDLEnum<WGPUBufferBindingType> {

    CUSTOM(0),
    BindingNotUsed(WGPUBufferBindingType_BindingNotUsed_NATIVE()),
    Undefined(WGPUBufferBindingType_Undefined_NATIVE()),
    Uniform(WGPUBufferBindingType_Uniform_NATIVE()),
    Storage(WGPUBufferBindingType_Storage_NATIVE()),
    ReadOnlyStorage(WGPUBufferBindingType_ReadOnlyStorage_NATIVE()),
    Force32(WGPUBufferBindingType_Force32_NATIVE());

    private int value;

    private WGPUBufferBindingType(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUBufferBindingType setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUBufferBindingType getCustom() {
        return CUSTOM;
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUBufferBindingType_BindingNotUsed;
*/
    private static native int WGPUBufferBindingType_BindingNotUsed_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBufferBindingType_Undefined;
*/
    private static native int WGPUBufferBindingType_Undefined_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBufferBindingType_Uniform;
*/
    private static native int WGPUBufferBindingType_Uniform_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBufferBindingType_Storage;
*/
    private static native int WGPUBufferBindingType_Storage_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBufferBindingType_ReadOnlyStorage;
*/
    private static native int WGPUBufferBindingType_ReadOnlyStorage_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBufferBindingType_Force32;
*/
    private static native int WGPUBufferBindingType_Force32_NATIVE();
}
