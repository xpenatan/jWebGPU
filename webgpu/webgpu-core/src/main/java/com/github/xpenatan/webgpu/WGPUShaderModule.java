/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUShaderModule extends IDLBase {

    static private WGPUShaderModule WGPUShaderModule_TEMP_STATIC_GEN_0;

    static public final WGPUShaderModule NULL = WGPUShaderModule.native_new();

    static public final WGPUShaderModule T_01 = WGPUShaderModule.native_new();

    static public final WGPUShaderModule T_02 = WGPUShaderModule.native_new();

    static public final WGPUShaderModule T_03 = WGPUShaderModule.native_new();

    public WGPUShaderModule() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUShaderModule();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUShaderModule(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUShaderModule native_new() {
        return new WGPUShaderModule((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModule* nativeObject = (JGPU::WGPUShaderModule*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUShaderModule obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUShaderModule_TEMP_STATIC_GEN_0 == null)
            WGPUShaderModule_TEMP_STATIC_GEN_0 = WGPUShaderModule.native_new();
        WGPUShaderModule_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUShaderModule_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUShaderModule::Obtain();
*/
    public static native long internal_native_Obtain();

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModule* nativeObject = (JGPU::WGPUShaderModule*)this_addr;
nativeObject->SetLabel(label);
*/
    public static native void internal_native_SetLabel(long this_addr, String label);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModule* nativeObject = (JGPU::WGPUShaderModule*)this_addr;
nativeObject->Release();
*/
    public static native void internal_native_Release(long this_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModule* nativeObject = (JGPU::WGPUShaderModule*)this_addr;
return nativeObject->IsValid();
*/
    public static native boolean internal_native_IsValid(long this_addr);

    public void setCallback(WGPUCallbackMode callbackMode, WGPUCompilationInfoCallback callback) {
        internal_native_SetCallback(native_address, callbackMode.getValue(), callback.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderModule* nativeObject = (JGPU::WGPUShaderModule*)this_addr;
nativeObject->SetCallback((::WGPUCallbackMode)callbackMode, (JGPU::WGPUCompilationInfoCallback* )callback_addr);
*/
    public static native void internal_native_SetCallback(long this_addr, long callbackMode, long callback_addr);
}
