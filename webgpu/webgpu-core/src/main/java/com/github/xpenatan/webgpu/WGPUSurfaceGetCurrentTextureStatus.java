/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.webgpu.idl.IDLEnum;

public enum WGPUSurfaceGetCurrentTextureStatus implements IDLEnum<WGPUSurfaceGetCurrentTextureStatus> {

    CUSTOM(0),
    SuccessOptimal(WGPUSurfaceGetCurrentTextureStatus_SuccessOptimal_NATIVE()),
    SuccessSuboptimal(WGPUSurfaceGetCurrentTextureStatus_SuccessSuboptimal_NATIVE()),
    Timeout(WGPUSurfaceGetCurrentTextureStatus_Timeout_NATIVE()),
    Outdated(WGPUSurfaceGetCurrentTextureStatus_Outdated_NATIVE()),
    Lost(WGPUSurfaceGetCurrentTextureStatus_Lost_NATIVE()),
    Error(WGPUSurfaceGetCurrentTextureStatus_Error_NATIVE()),
    Force32(WGPUSurfaceGetCurrentTextureStatus_Force32_NATIVE());

    private int value;

    private WGPUSurfaceGetCurrentTextureStatus(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUSurfaceGetCurrentTextureStatus setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUSurfaceGetCurrentTextureStatus getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, WGPUSurfaceGetCurrentTextureStatus> MAP = new HashMap<>();

    static {
        for (WGPUSurfaceGetCurrentTextureStatus value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_SuccessOptimal;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_SuccessOptimal_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_SuccessSuboptimal;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_SuccessSuboptimal_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_Timeout;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_Timeout_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_Outdated;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_Outdated_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_Lost;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_Lost_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_Error;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_Error_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUSurfaceGetCurrentTextureStatus_Force32;
*/
    private static native int WGPUSurfaceGetCurrentTextureStatus_Force32_NATIVE();
}
