/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLBase;

public class WGPURenderPassMaxDrawCount extends IDLBase {

    static private WGPURenderPassMaxDrawCount WGPURenderPassMaxDrawCount_TEMP_STATIC_GEN_0;

    static public final WGPURenderPassMaxDrawCount NULL = WGPURenderPassMaxDrawCount.native_new();

    public WGPURenderPassMaxDrawCount() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPURenderPassMaxDrawCount();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPURenderPassMaxDrawCount(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPURenderPassMaxDrawCount native_new() {
        return new WGPURenderPassMaxDrawCount((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassMaxDrawCount* nativeObject = (JGPU::WGPURenderPassMaxDrawCount*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setMaxDrawCount(int maxDrawCount) {
        internal_native_SetMaxDrawCount(native_address, maxDrawCount);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassMaxDrawCount* nativeObject = (JGPU::WGPURenderPassMaxDrawCount*)this_addr;
nativeObject->SetMaxDrawCount((int)maxDrawCount);
*/
    public static native void internal_native_SetMaxDrawCount(long this_addr, int maxDrawCount);

    public int getMaxDrawCount() {
        return internal_native_GetMaxDrawCount(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPassMaxDrawCount* nativeObject = (JGPU::WGPURenderPassMaxDrawCount*)this_addr;
return nativeObject->GetMaxDrawCount();
*/
    public static native int internal_native_GetMaxDrawCount(long this_addr);

    public static WGPURenderPassMaxDrawCount obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPURenderPassMaxDrawCount.NULL;
        if (WGPURenderPassMaxDrawCount_TEMP_STATIC_GEN_0 == null)
            WGPURenderPassMaxDrawCount_TEMP_STATIC_GEN_0 = WGPURenderPassMaxDrawCount.native_new();
        WGPURenderPassMaxDrawCount_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPURenderPassMaxDrawCount_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPURenderPassMaxDrawCount::Obtain();
*/
    public static native long internal_native_Obtain();
}
