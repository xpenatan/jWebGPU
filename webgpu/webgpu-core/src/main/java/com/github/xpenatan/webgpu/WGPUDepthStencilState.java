/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUDepthStencilState extends IDLBase {

    private WGPUStencilFaceState WGPUStencilFaceState_TEMP_GEN_0;

    private WGPUStencilFaceState WGPUStencilFaceState_TEMP_GEN_1;

    static private WGPUDepthStencilState WGPUDepthStencilState_TEMP_STATIC_GEN_0;

    static public final WGPUDepthStencilState NULL = WGPUDepthStencilState.native_new();

    public WGPUDepthStencilState() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUDepthStencilState();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUDepthStencilState(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUDepthStencilState native_new() {
        return new WGPUDepthStencilState((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public void setFormat(WGPUTextureFormat format) {
        internal_native_SetFormat(native_address, format.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetFormat((::WGPUTextureFormat)format);
*/
    public static native void internal_native_SetFormat(long this_addr, long format);

    public void setDepthWriteEnabled(WGPUOptionalBool depthWriteEnabled) {
        internal_native_SetDepthWriteEnabled(native_address, depthWriteEnabled.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetDepthWriteEnabled((::WGPUOptionalBool)depthWriteEnabled);
*/
    public static native void internal_native_SetDepthWriteEnabled(long this_addr, long depthWriteEnabled);

    public void setDepthCompare(WGPUCompareFunction depthCompare) {
        internal_native_SetDepthCompare(native_address, depthCompare.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetDepthCompare((::WGPUCompareFunction)depthCompare);
*/
    public static native void internal_native_SetDepthCompare(long this_addr, long depthCompare);

    public void setDepthBiasSlopeScale(float depthBiasSlopeScale) {
        internal_native_SetDepthBiasSlopeScale(native_address, depthBiasSlopeScale);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetDepthBiasSlopeScale((float)depthBiasSlopeScale);
*/
    public static native void internal_native_SetDepthBiasSlopeScale(long this_addr, float depthBiasSlopeScale);

    public void setDepthBiasClamp(float depthBiasClamp) {
        internal_native_SetDepthBiasClamp(native_address, depthBiasClamp);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetDepthBiasClamp((float)depthBiasClamp);
*/
    public static native void internal_native_SetDepthBiasClamp(long this_addr, float depthBiasClamp);

    public void setStencilReadMask(int stencilReadMask) {
        internal_native_SetStencilReadMask(native_address, stencilReadMask);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetStencilReadMask((int)stencilReadMask);
*/
    public static native void internal_native_SetStencilReadMask(long this_addr, int stencilReadMask);

    public void setStencilWriteMask(int stencilWriteMask) {
        internal_native_SetStencilWriteMask(native_address, stencilWriteMask);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetStencilWriteMask((int)stencilWriteMask);
*/
    public static native void internal_native_SetStencilWriteMask(long this_addr, int stencilWriteMask);

    public void setDepthBias(int depthBias) {
        internal_native_SetDepthBias(native_address, depthBias);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
nativeObject->SetDepthBias((int)depthBias);
*/
    public static native void internal_native_SetDepthBias(long this_addr, int depthBias);

    public WGPUStencilFaceState getStencilFront() {
        long pointer = internal_native_GetStencilFront(native_address);
        if (pointer == 0)
            return WGPUStencilFaceState.NULL;
        if (WGPUStencilFaceState_TEMP_GEN_0 == null)
            WGPUStencilFaceState_TEMP_GEN_0 = WGPUStencilFaceState.native_new();
        WGPUStencilFaceState_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUStencilFaceState_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
static JGPU::WGPUStencilFaceState copy_addr;
copy_addr = nativeObject->GetStencilFront();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetStencilFront(long this_addr);

    public WGPUStencilFaceState getStencilBack() {
        long pointer = internal_native_GetStencilBack(native_address);
        if (pointer == 0)
            return WGPUStencilFaceState.NULL;
        if (WGPUStencilFaceState_TEMP_GEN_1 == null)
            WGPUStencilFaceState_TEMP_GEN_1 = WGPUStencilFaceState.native_new();
        WGPUStencilFaceState_TEMP_GEN_1.internal_reset(pointer, false);
        return WGPUStencilFaceState_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUDepthStencilState* nativeObject = (JGPU::WGPUDepthStencilState*)this_addr;
static JGPU::WGPUStencilFaceState copy_addr;
copy_addr = nativeObject->GetStencilBack();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetStencilBack(long this_addr);

    public static WGPUDepthStencilState obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUDepthStencilState.NULL;
        if (WGPUDepthStencilState_TEMP_STATIC_GEN_0 == null)
            WGPUDepthStencilState_TEMP_STATIC_GEN_0 = WGPUDepthStencilState.native_new();
        WGPUDepthStencilState_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUDepthStencilState_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUDepthStencilState::Obtain();
*/
    public static native long internal_native_Obtain();
}
