/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUShaderSourceWGSL extends IDLBase {

    static private WGPUShaderSourceWGSL WGPUShaderSourceWGSL_TEMP_STATIC_GEN_0;

    private WGPUChainedStruct WGPUChainedStruct_TEMP_GEN_0;

    static public final WGPUShaderSourceWGSL NULL = WGPUShaderSourceWGSL.createInstance();

    static public final WGPUShaderSourceWGSL T_01 = WGPUShaderSourceWGSL.createInstance();

    static public final WGPUShaderSourceWGSL T_02 = WGPUShaderSourceWGSL.createInstance();

    static public final WGPUShaderSourceWGSL T_03 = WGPUShaderSourceWGSL.createInstance();

    public WGPUShaderSourceWGSL() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUShaderSourceWGSL();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUShaderSourceWGSL(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUShaderSourceWGSL createInstance() {
        return new WGPUShaderSourceWGSL((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderSourceWGSL* nativeObject = (JGPU::WGPUShaderSourceWGSL*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUShaderSourceWGSL obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUShaderSourceWGSL_TEMP_STATIC_GEN_0 == null)
            WGPUShaderSourceWGSL_TEMP_STATIC_GEN_0 = WGPUShaderSourceWGSL.createInstance();
        WGPUShaderSourceWGSL_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUShaderSourceWGSL_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUShaderSourceWGSL::Obtain();
*/
    public static native long internal_native_Obtain();

    public void setCode(String code) {
        internal_native_SetCode(native_address, code);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderSourceWGSL* nativeObject = (JGPU::WGPUShaderSourceWGSL*)this_addr;
nativeObject->SetCode(code);
*/
    public static native void internal_native_SetCode(long this_addr, String code);

    public WGPUChainedStruct getChain() {
        long pointer = internal_native_GetChain(native_address);
        if (pointer == 0)
            return null;
        if (WGPUChainedStruct_TEMP_GEN_0 == null)
            WGPUChainedStruct_TEMP_GEN_0 = WGPUChainedStruct.createInstance();
        WGPUChainedStruct_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUChainedStruct_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUShaderSourceWGSL* nativeObject = (JGPU::WGPUShaderSourceWGSL*)this_addr;
static JGPU::WGPUChainedStruct copy_addr;
copy_addr = nativeObject->GetChain();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetChain(long this_addr);
}
