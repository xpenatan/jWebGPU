/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUColorTargetState extends IDLBase {

    static private WGPUColorTargetState WGPUColorTargetState_TEMP_STATIC_GEN_0;

    static public final WGPUColorTargetState NULL = WGPUColorTargetState.native_new();

    public WGPUColorTargetState() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUColorTargetState();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUColorTargetState(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUColorTargetState native_new() {
        return new WGPUColorTargetState((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColorTargetState* nativeObject = (JGPU::WGPUColorTargetState*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColorTargetState* nativeObject = (JGPU::WGPUColorTargetState*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public void setFormat(WGPUTextureFormat format) {
        internal_native_SetFormat(native_address, format.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColorTargetState* nativeObject = (JGPU::WGPUColorTargetState*)this_addr;
nativeObject->SetFormat((::WGPUTextureFormat)format);
*/
    public static native void internal_native_SetFormat(long this_addr, long format);

    public void setBlend(WGPUBlendState blendState) {
        internal_native_SetBlend(native_address, blendState.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColorTargetState* nativeObject = (JGPU::WGPUColorTargetState*)this_addr;
nativeObject->SetBlend((JGPU::WGPUBlendState* )blendState_addr);
*/
    public static native void internal_native_SetBlend(long this_addr, long blendState_addr);

    public void setWriteMask(WGPUColorWriteMask writeMask) {
        internal_native_SetWriteMask(native_address, writeMask.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColorTargetState* nativeObject = (JGPU::WGPUColorTargetState*)this_addr;
nativeObject->SetWriteMask((::WGPUColorWriteMask)writeMask);
*/
    public static native void internal_native_SetWriteMask(long this_addr, long writeMask);

    public static WGPUColorTargetState obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUColorTargetState.NULL;
        if (WGPUColorTargetState_TEMP_STATIC_GEN_0 == null)
            WGPUColorTargetState_TEMP_STATIC_GEN_0 = WGPUColorTargetState.native_new();
        WGPUColorTargetState_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUColorTargetState_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUColorTargetState::Obtain();
*/
    public static native long internal_native_Obtain();
}
