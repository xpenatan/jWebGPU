/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUTexelCopyBufferInfo extends IDLBase {

    private WGPUTexelCopyBufferLayout WGPUTexelCopyBufferLayout_TEMP_GEN_0;

    private WGPUBuffer WGPUBuffer_TEMP_GEN_0;

    static private WGPUTexelCopyBufferInfo WGPUTexelCopyBufferInfo_TEMP_STATIC_GEN_0;

    static public final WGPUTexelCopyBufferInfo NULL = WGPUTexelCopyBufferInfo.native_new();

    static public final WGPUTexelCopyBufferInfo T_01 = WGPUTexelCopyBufferInfo.native_new();

    static public final WGPUTexelCopyBufferInfo T_02 = WGPUTexelCopyBufferInfo.native_new();

    static public final WGPUTexelCopyBufferInfo T_03 = WGPUTexelCopyBufferInfo.native_new();

    public WGPUTexelCopyBufferInfo() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUTexelCopyBufferInfo();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUTexelCopyBufferInfo(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUTexelCopyBufferInfo native_new() {
        return new WGPUTexelCopyBufferInfo((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexelCopyBufferInfo* nativeObject = (JGPU::WGPUTexelCopyBufferInfo*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public WGPUTexelCopyBufferLayout getLayout() {
        long pointer = internal_native_GetLayout(native_address);
        if (pointer == 0)
            return WGPUTexelCopyBufferLayout.NULL;
        if (WGPUTexelCopyBufferLayout_TEMP_GEN_0 == null)
            WGPUTexelCopyBufferLayout_TEMP_GEN_0 = WGPUTexelCopyBufferLayout.native_new();
        WGPUTexelCopyBufferLayout_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUTexelCopyBufferLayout_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexelCopyBufferInfo* nativeObject = (JGPU::WGPUTexelCopyBufferInfo*)this_addr;
static JGPU::WGPUTexelCopyBufferLayout copy_addr;
copy_addr = nativeObject->GetLayout();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetLayout(long this_addr);

    public WGPUBuffer getBuffer() {
        long pointer = internal_native_GetBuffer(native_address);
        if (pointer == 0)
            return WGPUBuffer.NULL;
        if (WGPUBuffer_TEMP_GEN_0 == null)
            WGPUBuffer_TEMP_GEN_0 = WGPUBuffer.native_new();
        WGPUBuffer_TEMP_GEN_0.internal_reset(pointer, false);
        return WGPUBuffer_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexelCopyBufferInfo* nativeObject = (JGPU::WGPUTexelCopyBufferInfo*)this_addr;
static JGPU::WGPUBuffer copy_addr;
copy_addr = nativeObject->GetBuffer();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetBuffer(long this_addr);

    public void setBuffer(WGPUBuffer buffer) {
        internal_native_SetBuffer(native_address, buffer.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexelCopyBufferInfo* nativeObject = (JGPU::WGPUTexelCopyBufferInfo*)this_addr;
nativeObject->SetBuffer((JGPU::WGPUBuffer* )buffer_addr);
*/
    public static native void internal_native_SetBuffer(long this_addr, long buffer_addr);

    public static WGPUTexelCopyBufferInfo obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUTexelCopyBufferInfo.NULL;
        if (WGPUTexelCopyBufferInfo_TEMP_STATIC_GEN_0 == null)
            WGPUTexelCopyBufferInfo_TEMP_STATIC_GEN_0 = WGPUTexelCopyBufferInfo.native_new();
        WGPUTexelCopyBufferInfo_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUTexelCopyBufferInfo_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUTexelCopyBufferInfo::Obtain();
*/
    public static native long internal_native_Obtain();
}
