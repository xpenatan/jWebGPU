/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLEnum;

public enum WGPUBlendFactor implements IDLEnum<WGPUBlendFactor> {

    CUSTOM(0),
    Undefined(WGPUBlendFactor_Undefined_NATIVE()),
    Zero(WGPUBlendFactor_Zero_NATIVE()),
    One(WGPUBlendFactor_One_NATIVE()),
    Src(WGPUBlendFactor_Src_NATIVE()),
    OneMinusSrc(WGPUBlendFactor_OneMinusSrc_NATIVE()),
    SrcAlpha(WGPUBlendFactor_SrcAlpha_NATIVE()),
    OneMinusSrcAlpha(WGPUBlendFactor_OneMinusSrcAlpha_NATIVE()),
    Dst(WGPUBlendFactor_Dst_NATIVE()),
    OneMinusDst(WGPUBlendFactor_OneMinusDst_NATIVE()),
    DstAlpha(WGPUBlendFactor_DstAlpha_NATIVE()),
    OneMinusDstAlpha(WGPUBlendFactor_OneMinusDstAlpha_NATIVE()),
    SrcAlphaSaturated(WGPUBlendFactor_SrcAlphaSaturated_NATIVE()),
    Constant(WGPUBlendFactor_Constant_NATIVE()),
    OneMinusConstant(WGPUBlendFactor_OneMinusConstant_NATIVE()),
    Src1(WGPUBlendFactor_Src1_NATIVE()),
    OneMinusSrc1(WGPUBlendFactor_OneMinusSrc1_NATIVE()),
    Src1Alpha(WGPUBlendFactor_Src1Alpha_NATIVE()),
    OneMinusSrc1Alpha(WGPUBlendFactor_OneMinusSrc1Alpha_NATIVE()),
    Force32(WGPUBlendFactor_Force32_NATIVE());

    private int value;

    private WGPUBlendFactor(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public WGPUBlendFactor setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public WGPUBlendFactor getCustom() {
        return CUSTOM;
    }

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Undefined;
*/
    private static native int WGPUBlendFactor_Undefined_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Zero;
*/
    private static native int WGPUBlendFactor_Zero_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_One;
*/
    private static native int WGPUBlendFactor_One_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Src;
*/
    private static native int WGPUBlendFactor_Src_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusSrc;
*/
    private static native int WGPUBlendFactor_OneMinusSrc_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_SrcAlpha;
*/
    private static native int WGPUBlendFactor_SrcAlpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusSrcAlpha;
*/
    private static native int WGPUBlendFactor_OneMinusSrcAlpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Dst;
*/
    private static native int WGPUBlendFactor_Dst_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusDst;
*/
    private static native int WGPUBlendFactor_OneMinusDst_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_DstAlpha;
*/
    private static native int WGPUBlendFactor_DstAlpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusDstAlpha;
*/
    private static native int WGPUBlendFactor_OneMinusDstAlpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_SrcAlphaSaturated;
*/
    private static native int WGPUBlendFactor_SrcAlphaSaturated_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Constant;
*/
    private static native int WGPUBlendFactor_Constant_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusConstant;
*/
    private static native int WGPUBlendFactor_OneMinusConstant_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Src1;
*/
    private static native int WGPUBlendFactor_Src1_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusSrc1;
*/
    private static native int WGPUBlendFactor_OneMinusSrc1_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Src1Alpha;
*/
    private static native int WGPUBlendFactor_Src1Alpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_OneMinusSrc1Alpha;
*/
    private static native int WGPUBlendFactor_OneMinusSrc1Alpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)WGPUBlendFactor_Force32;
*/
    private static native int WGPUBlendFactor_Force32_NATIVE();
}
