/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUTexture extends IDLBase {

    static private WGPUTexture WGPUTexture_TEMP_STATIC_GEN_0;

    static public final WGPUTexture NULL = WGPUTexture.native_new();

    static public final WGPUTexture T_01 = WGPUTexture.native_new();

    static public final WGPUTexture T_02 = WGPUTexture.native_new();

    static public final WGPUTexture T_03 = WGPUTexture.native_new();

    public WGPUTexture() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUTexture();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUTexture(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUTexture native_new() {
        return new WGPUTexture((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUTexture obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUTexture.NULL;
        if (WGPUTexture_TEMP_STATIC_GEN_0 == null)
            WGPUTexture_TEMP_STATIC_GEN_0 = WGPUTexture.native_new();
        WGPUTexture_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUTexture_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUTexture::Obtain();
*/
    public static native long internal_native_Obtain();

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
nativeObject->SetLabel(label);
*/
    public static native void internal_native_SetLabel(long this_addr, String label);

    public void createView(WGPUTextureViewDescriptor textureViewDescriptor, WGPUTextureView textureView) {
        internal_native_CreateView(native_address, textureViewDescriptor.native_address, textureView.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
nativeObject->CreateView((JGPU::WGPUTextureViewDescriptor* )textureViewDescriptor_addr, (JGPU::WGPUTextureView* )textureView_addr);
*/
    public static native void internal_native_CreateView(long this_addr, long textureViewDescriptor_addr, long textureView_addr);

    public WGPUTextureFormat getFormat() {
        int value = internal_native_GetFormat(native_address);
        return WGPUTextureFormat.MAP.get(value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
return (int)nativeObject->GetFormat();
*/
    public static native int internal_native_GetFormat(long this_addr);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
nativeObject->Release();
*/
    public static native void internal_native_Release(long this_addr);

    public void destroy() {
        internal_native_Destroy(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
nativeObject->Destroy();
*/
    public static native void internal_native_Destroy(long this_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUTexture* nativeObject = (JGPU::WGPUTexture*)this_addr;
return nativeObject->IsValid();
*/
    public static native boolean internal_native_IsValid(long this_addr);
}
