/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPURenderPipeline extends IDLBase {

    static public final WGPURenderPipeline NULL = WGPURenderPipeline.native_new();

    static public final WGPURenderPipeline T_01 = WGPURenderPipeline.native_new();

    static public final WGPURenderPipeline T_02 = WGPURenderPipeline.native_new();

    static public final WGPURenderPipeline T_03 = WGPURenderPipeline.native_new();

    public WGPURenderPipeline() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPURenderPipeline();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPURenderPipeline(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPURenderPipeline native_new() {
        return new WGPURenderPipeline((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPipeline* nativeObject = (JGPU::WGPURenderPipeline*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setLabel(String label) {
        internal_native_SetLabel(native_address, label);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPipeline* nativeObject = (JGPU::WGPURenderPipeline*)this_addr;
nativeObject->SetLabel(label);
*/
    public static native void internal_native_SetLabel(long this_addr, String label);

    public void release() {
        internal_native_Release(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPipeline* nativeObject = (JGPU::WGPURenderPipeline*)this_addr;
nativeObject->Release();
*/
    public static native void internal_native_Release(long this_addr);

    public boolean isValid() {
        return internal_native_IsValid(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPURenderPipeline* nativeObject = (JGPU::WGPURenderPipeline*)this_addr;
return nativeObject->IsValid();
*/
    public static native boolean internal_native_IsValid(long this_addr);
}
