/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUVectorVertexBufferLayout extends IDLBase {

    static private WGPUVectorVertexBufferLayout WGPUVectorVertexBufferLayout_TEMP_STATIC_GEN_0;

    static public final WGPUVectorVertexBufferLayout NULL = WGPUVectorVertexBufferLayout.native_new();

    public WGPUVectorVertexBufferLayout() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUVectorVertexBufferLayout();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUVectorVertexBufferLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUVectorVertexBufferLayout native_new() {
        return new WGPUVectorVertexBufferLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVectorVertexBufferLayout* nativeObject = (JGPU::WGPUVectorVertexBufferLayout*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int size() {
        return internal_native_size(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVectorVertexBufferLayout* nativeObject = (JGPU::WGPUVectorVertexBufferLayout*)this_addr;
return nativeObject->size();
*/
    public static native int internal_native_size(long this_addr);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVectorVertexBufferLayout* nativeObject = (JGPU::WGPUVectorVertexBufferLayout*)this_addr;
nativeObject->clear();
*/
    public static native void internal_native_clear(long this_addr);

    public void push_back(WGPUVertexBufferLayout vertexBufferLayout) {
        internal_native_push_back(native_address, vertexBufferLayout.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVectorVertexBufferLayout* nativeObject = (JGPU::WGPUVectorVertexBufferLayout*)this_addr;
nativeObject->push_back(*((JGPU::WGPUVertexBufferLayout* )vertexBufferLayout_addr));
*/
    public static native void internal_native_push_back(long this_addr, long vertexBufferLayout_addr);

    public static WGPUVectorVertexBufferLayout obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUVectorVertexBufferLayout.NULL;
        if (WGPUVectorVertexBufferLayout_TEMP_STATIC_GEN_0 == null)
            WGPUVectorVertexBufferLayout_TEMP_STATIC_GEN_0 = WGPUVectorVertexBufferLayout.native_new();
        WGPUVectorVertexBufferLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUVectorVertexBufferLayout_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUVectorVertexBufferLayout::Obtain();
*/
    public static native long internal_native_Obtain();
}
