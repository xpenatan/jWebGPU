/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUColor extends IDLBase {

    static private WGPUColor WGPUColor_TEMP_STATIC_GEN_0;

    static public final WGPUColor NULL = WGPUColor.native_new();

    static public final WGPUColor T_01 = WGPUColor.native_new();

    static public final WGPUColor T_02 = WGPUColor.native_new();

    static public final WGPUColor T_03 = WGPUColor.native_new();

    public WGPUColor() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUColor();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUColor(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUColor native_new() {
        return new WGPUColor((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUColor obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUColor.NULL;
        if (WGPUColor_TEMP_STATIC_GEN_0 == null)
            WGPUColor_TEMP_STATIC_GEN_0 = WGPUColor.native_new();
        WGPUColor_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUColor_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUColor::Obtain();
*/
    public static native long internal_native_Obtain();

    public void setColor(float r, float g, float b, float a) {
        internal_native_SetColor(native_address, r, g, b, a);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
nativeObject->SetColor((float)r, (float)g, (float)b, (float)a);
*/
    public static native void internal_native_SetColor(long this_addr, float r, float g, float b, float a);

    public void setR(float value) {
        internal_native_SetR(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
nativeObject->SetR((float)value);
*/
    public static native void internal_native_SetR(long this_addr, float value);

    public void setG(float value) {
        internal_native_SetG(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
nativeObject->SetG((float)value);
*/
    public static native void internal_native_SetG(long this_addr, float value);

    public void setB(float value) {
        internal_native_SetB(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
nativeObject->SetB((float)value);
*/
    public static native void internal_native_SetB(long this_addr, float value);

    public void setA(float value) {
        internal_native_SetA(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
nativeObject->SetA((float)value);
*/
    public static native void internal_native_SetA(long this_addr, float value);

    public float getR() {
        return internal_native_GetR(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
return nativeObject->GetR();
*/
    public static native float internal_native_GetR(long this_addr);

    public float getG() {
        return internal_native_GetG(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
return nativeObject->GetG();
*/
    public static native float internal_native_GetG(long this_addr);

    public float getB() {
        return internal_native_GetB(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
return nativeObject->GetB();
*/
    public static native float internal_native_GetB(long this_addr);

    public float getA() {
        return internal_native_GetA(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUColor* nativeObject = (JGPU::WGPUColor*)this_addr;
return nativeObject->GetA();
*/
    public static native float internal_native_GetA(long this_addr);
}
