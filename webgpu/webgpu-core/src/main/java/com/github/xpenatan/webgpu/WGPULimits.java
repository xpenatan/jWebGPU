/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLBase;

public class WGPULimits extends IDLBase {

    static private WGPULimits WGPULimits_TEMP_STATIC_GEN_0;

    static public final WGPULimits NULL = WGPULimits.native_new();

    public WGPULimits() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPULimits();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPULimits(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPULimits native_new() {
        return new WGPULimits((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setMaxTextureDimension1D(int value) {
        internal_native_SetMaxTextureDimension1D(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxTextureDimension1D((int)value);
*/
    public static native void internal_native_SetMaxTextureDimension1D(long this_addr, int value);

    public int getMaxTextureDimension1D() {
        return internal_native_GetMaxTextureDimension1D(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxTextureDimension1D();
*/
    public static native int internal_native_GetMaxTextureDimension1D(long this_addr);

    public void setMaxTextureDimension2D(int value) {
        internal_native_SetMaxTextureDimension2D(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxTextureDimension2D((int)value);
*/
    public static native void internal_native_SetMaxTextureDimension2D(long this_addr, int value);

    public int getMaxTextureDimension2D() {
        return internal_native_GetMaxTextureDimension2D(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxTextureDimension2D();
*/
    public static native int internal_native_GetMaxTextureDimension2D(long this_addr);

    public void setMaxTextureDimension3D(int value) {
        internal_native_SetMaxTextureDimension3D(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxTextureDimension3D((int)value);
*/
    public static native void internal_native_SetMaxTextureDimension3D(long this_addr, int value);

    public int getMaxTextureDimension3D() {
        return internal_native_GetMaxTextureDimension3D(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxTextureDimension3D();
*/
    public static native int internal_native_GetMaxTextureDimension3D(long this_addr);

    public void setMaxTextureArrayLayers(int value) {
        internal_native_SetMaxTextureArrayLayers(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxTextureArrayLayers((int)value);
*/
    public static native void internal_native_SetMaxTextureArrayLayers(long this_addr, int value);

    public int getMaxTextureArrayLayers() {
        return internal_native_GetMaxTextureArrayLayers(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxTextureArrayLayers();
*/
    public static native int internal_native_GetMaxTextureArrayLayers(long this_addr);

    public void setMaxBindGroups(int value) {
        internal_native_SetMaxBindGroups(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxBindGroups((int)value);
*/
    public static native void internal_native_SetMaxBindGroups(long this_addr, int value);

    public int getMaxBindGroups() {
        return internal_native_GetMaxBindGroups(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxBindGroups();
*/
    public static native int internal_native_GetMaxBindGroups(long this_addr);

    public void setMaxBindGroupsPlusVertexBuffers(int value) {
        internal_native_SetMaxBindGroupsPlusVertexBuffers(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxBindGroupsPlusVertexBuffers((int)value);
*/
    public static native void internal_native_SetMaxBindGroupsPlusVertexBuffers(long this_addr, int value);

    public int getMaxBindGroupsPlusVertexBuffers() {
        return internal_native_GetMaxBindGroupsPlusVertexBuffers(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxBindGroupsPlusVertexBuffers();
*/
    public static native int internal_native_GetMaxBindGroupsPlusVertexBuffers(long this_addr);

    public void setMaxBindingsPerBindGroup(int value) {
        internal_native_SetMaxBindingsPerBindGroup(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxBindingsPerBindGroup((int)value);
*/
    public static native void internal_native_SetMaxBindingsPerBindGroup(long this_addr, int value);

    public int getMaxBindingsPerBindGroup() {
        return internal_native_GetMaxBindingsPerBindGroup(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxBindingsPerBindGroup();
*/
    public static native int internal_native_GetMaxBindingsPerBindGroup(long this_addr);

    public void setMaxDynamicUniformBuffersPerPipelineLayout(int value) {
        internal_native_SetMaxDynamicUniformBuffersPerPipelineLayout(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxDynamicUniformBuffersPerPipelineLayout((int)value);
*/
    public static native void internal_native_SetMaxDynamicUniformBuffersPerPipelineLayout(long this_addr, int value);

    public int getMaxDynamicUniformBuffersPerPipelineLayout() {
        return internal_native_GetMaxDynamicUniformBuffersPerPipelineLayout(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxDynamicUniformBuffersPerPipelineLayout();
*/
    public static native int internal_native_GetMaxDynamicUniformBuffersPerPipelineLayout(long this_addr);

    public void setMaxDynamicStorageBuffersPerPipelineLayout(int value) {
        internal_native_SetMaxDynamicStorageBuffersPerPipelineLayout(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxDynamicStorageBuffersPerPipelineLayout((int)value);
*/
    public static native void internal_native_SetMaxDynamicStorageBuffersPerPipelineLayout(long this_addr, int value);

    public int getMaxDynamicStorageBuffersPerPipelineLayout() {
        return internal_native_GetMaxDynamicStorageBuffersPerPipelineLayout(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxDynamicStorageBuffersPerPipelineLayout();
*/
    public static native int internal_native_GetMaxDynamicStorageBuffersPerPipelineLayout(long this_addr);

    public void setMaxSampledTexturesPerShaderStage(int value) {
        internal_native_SetMaxSampledTexturesPerShaderStage(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxSampledTexturesPerShaderStage((int)value);
*/
    public static native void internal_native_SetMaxSampledTexturesPerShaderStage(long this_addr, int value);

    public int getMaxSampledTexturesPerShaderStage() {
        return internal_native_GetMaxSampledTexturesPerShaderStage(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxSampledTexturesPerShaderStage();
*/
    public static native int internal_native_GetMaxSampledTexturesPerShaderStage(long this_addr);

    public void setMaxSamplersPerShaderStage(int value) {
        internal_native_SetMaxSamplersPerShaderStage(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxSamplersPerShaderStage((int)value);
*/
    public static native void internal_native_SetMaxSamplersPerShaderStage(long this_addr, int value);

    public int getMaxSamplersPerShaderStage() {
        return internal_native_GetMaxSamplersPerShaderStage(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxSamplersPerShaderStage();
*/
    public static native int internal_native_GetMaxSamplersPerShaderStage(long this_addr);

    public void setMaxStorageBuffersPerShaderStage(int value) {
        internal_native_SetMaxStorageBuffersPerShaderStage(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxStorageBuffersPerShaderStage((int)value);
*/
    public static native void internal_native_SetMaxStorageBuffersPerShaderStage(long this_addr, int value);

    public int getMaxStorageBuffersPerShaderStage() {
        return internal_native_GetMaxStorageBuffersPerShaderStage(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxStorageBuffersPerShaderStage();
*/
    public static native int internal_native_GetMaxStorageBuffersPerShaderStage(long this_addr);

    public void setMaxStorageTexturesPerShaderStage(int value) {
        internal_native_SetMaxStorageTexturesPerShaderStage(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxStorageTexturesPerShaderStage((int)value);
*/
    public static native void internal_native_SetMaxStorageTexturesPerShaderStage(long this_addr, int value);

    public int getMaxStorageTexturesPerShaderStage() {
        return internal_native_GetMaxStorageTexturesPerShaderStage(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxStorageTexturesPerShaderStage();
*/
    public static native int internal_native_GetMaxStorageTexturesPerShaderStage(long this_addr);

    public void setMaxUniformBuffersPerShaderStage(int value) {
        internal_native_SetMaxUniformBuffersPerShaderStage(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxUniformBuffersPerShaderStage((int)value);
*/
    public static native void internal_native_SetMaxUniformBuffersPerShaderStage(long this_addr, int value);

    public int getMaxUniformBuffersPerShaderStage() {
        return internal_native_GetMaxUniformBuffersPerShaderStage(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxUniformBuffersPerShaderStage();
*/
    public static native int internal_native_GetMaxUniformBuffersPerShaderStage(long this_addr);

    public void setMaxUniformBufferBindingSize(int value) {
        internal_native_SetMaxUniformBufferBindingSize(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxUniformBufferBindingSize((int)value);
*/
    public static native void internal_native_SetMaxUniformBufferBindingSize(long this_addr, int value);

    public int getMaxUniformBufferBindingSize() {
        return internal_native_GetMaxUniformBufferBindingSize(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxUniformBufferBindingSize();
*/
    public static native int internal_native_GetMaxUniformBufferBindingSize(long this_addr);

    public void setMaxStorageBufferBindingSize(int value) {
        internal_native_SetMaxStorageBufferBindingSize(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxStorageBufferBindingSize((int)value);
*/
    public static native void internal_native_SetMaxStorageBufferBindingSize(long this_addr, int value);

    public int getMaxStorageBufferBindingSize() {
        return internal_native_GetMaxStorageBufferBindingSize(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxStorageBufferBindingSize();
*/
    public static native int internal_native_GetMaxStorageBufferBindingSize(long this_addr);

    public void setMinUniformBufferOffsetAlignment(int value) {
        internal_native_SetMinUniformBufferOffsetAlignment(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMinUniformBufferOffsetAlignment((int)value);
*/
    public static native void internal_native_SetMinUniformBufferOffsetAlignment(long this_addr, int value);

    public int getMinUniformBufferOffsetAlignment() {
        return internal_native_GetMinUniformBufferOffsetAlignment(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMinUniformBufferOffsetAlignment();
*/
    public static native int internal_native_GetMinUniformBufferOffsetAlignment(long this_addr);

    public void setMinStorageBufferOffsetAlignment(int value) {
        internal_native_SetMinStorageBufferOffsetAlignment(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMinStorageBufferOffsetAlignment((int)value);
*/
    public static native void internal_native_SetMinStorageBufferOffsetAlignment(long this_addr, int value);

    public int getMinStorageBufferOffsetAlignment() {
        return internal_native_GetMinStorageBufferOffsetAlignment(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMinStorageBufferOffsetAlignment();
*/
    public static native int internal_native_GetMinStorageBufferOffsetAlignment(long this_addr);

    public void setMaxVertexBuffers(int value) {
        internal_native_SetMaxVertexBuffers(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxVertexBuffers((int)value);
*/
    public static native void internal_native_SetMaxVertexBuffers(long this_addr, int value);

    public int getMaxVertexBuffers() {
        return internal_native_GetMaxVertexBuffers(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxVertexBuffers();
*/
    public static native int internal_native_GetMaxVertexBuffers(long this_addr);

    public void setMaxBufferSize(long value) {
        internal_native_SetMaxBufferSize(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxBufferSize(value);
*/
    public static native void internal_native_SetMaxBufferSize(long this_addr, long value);

    public int getMaxBufferSize() {
        return internal_native_GetMaxBufferSize(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxBufferSize();
*/
    public static native int internal_native_GetMaxBufferSize(long this_addr);

    public void setMaxVertexAttributes(int value) {
        internal_native_SetMaxVertexAttributes(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxVertexAttributes((int)value);
*/
    public static native void internal_native_SetMaxVertexAttributes(long this_addr, int value);

    public int getMaxVertexAttributes() {
        return internal_native_GetMaxVertexAttributes(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxVertexAttributes();
*/
    public static native int internal_native_GetMaxVertexAttributes(long this_addr);

    public void setMaxVertexBufferArrayStride(int value) {
        internal_native_SetMaxVertexBufferArrayStride(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxVertexBufferArrayStride((int)value);
*/
    public static native void internal_native_SetMaxVertexBufferArrayStride(long this_addr, int value);

    public int getMaxVertexBufferArrayStride() {
        return internal_native_GetMaxVertexBufferArrayStride(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxVertexBufferArrayStride();
*/
    public static native int internal_native_GetMaxVertexBufferArrayStride(long this_addr);

    public void setMaxInterStageShaderVariables(int value) {
        internal_native_SetMaxInterStageShaderVariables(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxInterStageShaderVariables((int)value);
*/
    public static native void internal_native_SetMaxInterStageShaderVariables(long this_addr, int value);

    public int getMaxInterStageShaderVariables() {
        return internal_native_GetMaxInterStageShaderVariables(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxInterStageShaderVariables();
*/
    public static native int internal_native_GetMaxInterStageShaderVariables(long this_addr);

    public void setMaxColorAttachments(int value) {
        internal_native_SetMaxColorAttachments(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxColorAttachments((int)value);
*/
    public static native void internal_native_SetMaxColorAttachments(long this_addr, int value);

    public int getMaxColorAttachments() {
        return internal_native_GetMaxColorAttachments(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxColorAttachments();
*/
    public static native int internal_native_GetMaxColorAttachments(long this_addr);

    public void setMaxColorAttachmentBytesPerSample(int value) {
        internal_native_SetMaxColorAttachmentBytesPerSample(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxColorAttachmentBytesPerSample((int)value);
*/
    public static native void internal_native_SetMaxColorAttachmentBytesPerSample(long this_addr, int value);

    public int getMaxColorAttachmentBytesPerSample() {
        return internal_native_GetMaxColorAttachmentBytesPerSample(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxColorAttachmentBytesPerSample();
*/
    public static native int internal_native_GetMaxColorAttachmentBytesPerSample(long this_addr);

    public void setMaxComputeWorkgroupStorageSize(int value) {
        internal_native_SetMaxComputeWorkgroupStorageSize(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxComputeWorkgroupStorageSize((int)value);
*/
    public static native void internal_native_SetMaxComputeWorkgroupStorageSize(long this_addr, int value);

    public int getMaxComputeWorkgroupStorageSize() {
        return internal_native_GetMaxComputeWorkgroupStorageSize(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxComputeWorkgroupStorageSize();
*/
    public static native int internal_native_GetMaxComputeWorkgroupStorageSize(long this_addr);

    public void setMaxComputeInvocationsPerWorkgroup(int value) {
        internal_native_SetMaxComputeInvocationsPerWorkgroup(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxComputeInvocationsPerWorkgroup((int)value);
*/
    public static native void internal_native_SetMaxComputeInvocationsPerWorkgroup(long this_addr, int value);

    public int getMaxComputeInvocationsPerWorkgroup() {
        return internal_native_GetMaxComputeInvocationsPerWorkgroup(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxComputeInvocationsPerWorkgroup();
*/
    public static native int internal_native_GetMaxComputeInvocationsPerWorkgroup(long this_addr);

    public void setMaxComputeWorkgroupSizeX(int value) {
        internal_native_SetMaxComputeWorkgroupSizeX(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxComputeWorkgroupSizeX((int)value);
*/
    public static native void internal_native_SetMaxComputeWorkgroupSizeX(long this_addr, int value);

    public int getMaxComputeWorkgroupSizeX() {
        return internal_native_GetMaxComputeWorkgroupSizeX(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxComputeWorkgroupSizeX();
*/
    public static native int internal_native_GetMaxComputeWorkgroupSizeX(long this_addr);

    public void setMaxComputeWorkgroupSizeY(int value) {
        internal_native_SetMaxComputeWorkgroupSizeY(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxComputeWorkgroupSizeY((int)value);
*/
    public static native void internal_native_SetMaxComputeWorkgroupSizeY(long this_addr, int value);

    public int getMaxComputeWorkgroupSizeY() {
        return internal_native_GetMaxComputeWorkgroupSizeY(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxComputeWorkgroupSizeY();
*/
    public static native int internal_native_GetMaxComputeWorkgroupSizeY(long this_addr);

    public void setMaxComputeWorkgroupSizeZ(int value) {
        internal_native_SetMaxComputeWorkgroupSizeZ(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxComputeWorkgroupSizeZ((int)value);
*/
    public static native void internal_native_SetMaxComputeWorkgroupSizeZ(long this_addr, int value);

    public int getMaxComputeWorkgroupSizeZ() {
        return internal_native_GetMaxComputeWorkgroupSizeZ(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxComputeWorkgroupSizeZ();
*/
    public static native int internal_native_GetMaxComputeWorkgroupSizeZ(long this_addr);

    public void setMaxComputeWorkgroupsPerDimension(int value) {
        internal_native_SetMaxComputeWorkgroupsPerDimension(native_address, value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
nativeObject->SetMaxComputeWorkgroupsPerDimension((int)value);
*/
    public static native void internal_native_SetMaxComputeWorkgroupsPerDimension(long this_addr, int value);

    public int getMaxComputeWorkgroupsPerDimension() {
        return internal_native_GetMaxComputeWorkgroupsPerDimension(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPULimits* nativeObject = (JGPU::WGPULimits*)this_addr;
return nativeObject->GetMaxComputeWorkgroupsPerDimension();
*/
    public static native int internal_native_GetMaxComputeWorkgroupsPerDimension(long this_addr);

    public static WGPULimits obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPULimits.NULL;
        if (WGPULimits_TEMP_STATIC_GEN_0 == null)
            WGPULimits_TEMP_STATIC_GEN_0 = WGPULimits.native_new();
        WGPULimits_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPULimits_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPULimits::Obtain();
*/
    public static native long internal_native_Obtain();
}
