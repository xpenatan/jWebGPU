/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUFragmentState extends IDLBase {

    static private WGPUFragmentState WGPUFragmentState_TEMP_STATIC_GEN_0;

    static public final WGPUFragmentState NULL = WGPUFragmentState.native_new();

    public WGPUFragmentState() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUFragmentState();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUFragmentState(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUFragmentState native_new() {
        return new WGPUFragmentState((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public void setEntryPoint(String entryPoint) {
        internal_native_SetEntryPoint(native_address, entryPoint);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetEntryPoint(entryPoint);
*/
    public static native void internal_native_SetEntryPoint(long this_addr, String entryPoint);

    public void setTargets(WGPUVectorColorTargetState targets) {
        internal_native_SetTargets__0(native_address, targets.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetTargets((JGPU::WGPUVectorColorTargetState* )targets_addr);
*/
    public static native void internal_native_SetTargets__0(long this_addr, long targets_addr);

    public void setTargets(WGPUColorTargetState target01) {
        internal_native_SetTargets__1(native_address, target01.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetTargets((JGPU::WGPUColorTargetState* )target01_addr);
*/
    public static native void internal_native_SetTargets__1(long this_addr, long target01_addr);

    public void setTargets(WGPUColorTargetState target01, WGPUColorTargetState target02) {
        internal_native_SetTargets__2(native_address, target01.native_address, target02.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetTargets((JGPU::WGPUColorTargetState* )target01_addr, (JGPU::WGPUColorTargetState* )target02_addr);
*/
    public static native void internal_native_SetTargets__2(long this_addr, long target01_addr, long target02_addr);

    public void setTargets(WGPUColorTargetState target01, WGPUColorTargetState target02, WGPUColorTargetState target03) {
        internal_native_SetTargets__3(native_address, target01.native_address, target02.native_address, target03.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetTargets((JGPU::WGPUColorTargetState* )target01_addr, (JGPU::WGPUColorTargetState* )target02_addr, (JGPU::WGPUColorTargetState* )target03_addr);
*/
    public static native void internal_native_SetTargets__3(long this_addr, long target01_addr, long target02_addr, long target03_addr);

    public void setTargets(WGPUColorTargetState target01, WGPUColorTargetState target02, WGPUColorTargetState target03, WGPUColorTargetState target04) {
        internal_native_SetTargets__4(native_address, target01.native_address, target02.native_address, target03.native_address, target04.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetTargets((JGPU::WGPUColorTargetState* )target01_addr, (JGPU::WGPUColorTargetState* )target02_addr, (JGPU::WGPUColorTargetState* )target03_addr, (JGPU::WGPUColorTargetState* )target04_addr);
*/
    public static native void internal_native_SetTargets__4(long this_addr, long target01_addr, long target02_addr, long target03_addr, long target04_addr);

    public void setModule(WGPUShaderModule shaderModule) {
        internal_native_SetModule(native_address, shaderModule.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetModule((JGPU::WGPUShaderModule* )shaderModule_addr);
*/
    public static native void internal_native_SetModule(long this_addr, long shaderModule_addr);

    public void setConstants(WGPUVectorConstantEntry constants) {
        internal_native_SetConstants(native_address, constants.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUFragmentState* nativeObject = (JGPU::WGPUFragmentState*)this_addr;
nativeObject->SetConstants((JGPU::WGPUVectorConstantEntry* )constants_addr);
*/
    public static native void internal_native_SetConstants(long this_addr, long constants_addr);

    public static WGPUFragmentState obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUFragmentState.NULL;
        if (WGPUFragmentState_TEMP_STATIC_GEN_0 == null)
            WGPUFragmentState_TEMP_STATIC_GEN_0 = WGPUFragmentState.native_new();
        WGPUFragmentState_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUFragmentState_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUFragmentState::Obtain();
*/
    public static native long internal_native_Obtain();
}
