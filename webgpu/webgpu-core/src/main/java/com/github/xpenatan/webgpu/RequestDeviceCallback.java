/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class RequestDeviceCallback extends IDLBase {

    /*[-JNI;-NATIVE]
class RequestDeviceCallbackImpl : public RequestDeviceCallback {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID OnCallbackIJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(RequestDeviceCallbackImpl::jClassID == 0) {
		RequestDeviceCallbackImpl::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		RequestDeviceCallbackImpl::OnCallbackIJ_ID = env->GetMethodID(jClassID, "internal_onCallback", "(IJ)V");
	}
}
virtual void OnCallback(WGPURequestDeviceStatus status, JGPU::WGPUDevice* device) {
   env->CallVoidMethod(obj, RequestDeviceCallbackImpl::OnCallbackIJ_ID, status, (jlong)device);
}
};
*/
    @Deprecated()
    protected RequestDeviceCallback(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static RequestDeviceCallback native_new() {
        return new RequestDeviceCallback((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
RequestDeviceCallbackImpl* nativeObject = (RequestDeviceCallbackImpl*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public RequestDeviceCallback() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void onCallback(WGPURequestDeviceStatus status, WGPUDevice device) {
    }

    private void internal_onCallback(int status_addr, long device_addr) {
        WGPUDevice device_addr_new = WGPUDevice.native_new();
        device_addr_new.internal_reset(device_addr, true);
        onCallback(WGPURequestDeviceStatus.MAP.get(status_addr), device_addr_new);
    }

    /*[-JNI;-NATIVE]
return (jlong)new RequestDeviceCallbackImpl();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
RequestDeviceCallbackImpl* nativeObject = (RequestDeviceCallbackImpl*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
