/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUBufferBindingLayout extends IDLBase {

    static private WGPUBufferBindingLayout WGPUBufferBindingLayout_TEMP_STATIC_GEN_0;

    static public final WGPUBufferBindingLayout NULL = WGPUBufferBindingLayout.native_new();

    public WGPUBufferBindingLayout() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUBufferBindingLayout();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUBufferBindingLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUBufferBindingLayout native_new() {
        return new WGPUBufferBindingLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBufferBindingLayout* nativeObject = (JGPU::WGPUBufferBindingLayout*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBufferBindingLayout* nativeObject = (JGPU::WGPUBufferBindingLayout*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public void setType(WGPUBufferBindingType type) {
        internal_native_SetType(native_address, type.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBufferBindingLayout* nativeObject = (JGPU::WGPUBufferBindingLayout*)this_addr;
nativeObject->SetType((::WGPUBufferBindingType)type);
*/
    public static native void internal_native_SetType(long this_addr, long type);

    public void setHasDynamicOffset(int hasDynamicOffset) {
        internal_native_SetHasDynamicOffset(native_address, hasDynamicOffset);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBufferBindingLayout* nativeObject = (JGPU::WGPUBufferBindingLayout*)this_addr;
nativeObject->SetHasDynamicOffset((int)hasDynamicOffset);
*/
    public static native void internal_native_SetHasDynamicOffset(long this_addr, int hasDynamicOffset);

    public void setMinBindingSize(int minBindingSize) {
        internal_native_SetMinBindingSize(native_address, minBindingSize);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBufferBindingLayout* nativeObject = (JGPU::WGPUBufferBindingLayout*)this_addr;
nativeObject->SetMinBindingSize((int)minBindingSize);
*/
    public static native void internal_native_SetMinBindingSize(long this_addr, int minBindingSize);

    public static WGPUBufferBindingLayout obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUBufferBindingLayout.NULL;
        if (WGPUBufferBindingLayout_TEMP_STATIC_GEN_0 == null)
            WGPUBufferBindingLayout_TEMP_STATIC_GEN_0 = WGPUBufferBindingLayout.native_new();
        WGPUBufferBindingLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUBufferBindingLayout_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUBufferBindingLayout::Obtain();
*/
    public static native long internal_native_Obtain();
}
