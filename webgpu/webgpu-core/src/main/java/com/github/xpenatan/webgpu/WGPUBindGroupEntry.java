/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUBindGroupEntry extends IDLBase {

    static private WGPUBindGroupEntry WGPUBindGroupEntry_TEMP_STATIC_GEN_0;

    static public final WGPUBindGroupEntry NULL = WGPUBindGroupEntry.native_new();

    static public final WGPUBindGroupEntry T_01 = WGPUBindGroupEntry.native_new();

    static public final WGPUBindGroupEntry T_02 = WGPUBindGroupEntry.native_new();

    static public final WGPUBindGroupEntry T_03 = WGPUBindGroupEntry.native_new();

    public WGPUBindGroupEntry() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUBindGroupEntry();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUBindGroupEntry(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUBindGroupEntry native_new() {
        return new WGPUBindGroupEntry((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUBindGroupEntry obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUBindGroupEntry_TEMP_STATIC_GEN_0 == null)
            WGPUBindGroupEntry_TEMP_STATIC_GEN_0 = WGPUBindGroupEntry.native_new();
        WGPUBindGroupEntry_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUBindGroupEntry_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUBindGroupEntry::Obtain();
*/
    public static native long internal_native_Obtain();

    public void reset() {
        internal_native_Reset(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->Reset();
*/
    public static native void internal_native_Reset(long this_addr);

    public void setNextInChain(WGPUChainedStruct chainedStruct) {
        internal_native_SetNextInChain(native_address, chainedStruct.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetNextInChain((JGPU::WGPUChainedStruct* )chainedStruct_addr);
*/
    public static native void internal_native_SetNextInChain(long this_addr, long chainedStruct_addr);

    public void setBinding(int binding) {
        internal_native_SetBinding(native_address, binding);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetBinding((int)binding);
*/
    public static native void internal_native_SetBinding(long this_addr, int binding);

    public void setBuffer(WGPUBuffer buffer) {
        internal_native_SetBuffer(native_address, buffer.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetBuffer((JGPU::WGPUBuffer* )buffer_addr);
*/
    public static native void internal_native_SetBuffer(long this_addr, long buffer_addr);

    public void setOffset(int offset) {
        internal_native_SetOffset(native_address, offset);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetOffset((int)offset);
*/
    public static native void internal_native_SetOffset(long this_addr, int offset);

    public void setSize(int size) {
        internal_native_SetSize(native_address, size);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetSize((int)size);
*/
    public static native void internal_native_SetSize(long this_addr, int size);

    public void setSampler(WGPUSampler sampler) {
        internal_native_SetSampler(native_address, sampler.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetSampler((JGPU::WGPUSampler* )sampler_addr);
*/
    public static native void internal_native_SetSampler(long this_addr, long sampler_addr);

    public void setTextureView(WGPUTextureView textureView) {
        internal_native_SetTextureView(native_address, textureView.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUBindGroupEntry* nativeObject = (JGPU::WGPUBindGroupEntry*)this_addr;
nativeObject->SetTextureView((JGPU::WGPUTextureView* )textureView_addr);
*/
    public static native void internal_native_SetTextureView(long this_addr, long textureView_addr);
}
