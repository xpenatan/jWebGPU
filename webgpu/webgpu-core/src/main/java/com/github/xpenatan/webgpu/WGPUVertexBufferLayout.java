/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.webgpu.idl.IDLBase;

public class WGPUVertexBufferLayout extends IDLBase {

    static private WGPUVertexBufferLayout WGPUVertexBufferLayout_TEMP_STATIC_GEN_0;

    static public final WGPUVertexBufferLayout NULL = WGPUVertexBufferLayout.native_new();

    static public final WGPUVertexBufferLayout T_01 = WGPUVertexBufferLayout.native_new();

    static public final WGPUVertexBufferLayout T_02 = WGPUVertexBufferLayout.native_new();

    static public final WGPUVertexBufferLayout T_03 = WGPUVertexBufferLayout.native_new();

    public WGPUVertexBufferLayout() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUVertexBufferLayout();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUVertexBufferLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUVertexBufferLayout native_new() {
        return new WGPUVertexBufferLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVertexBufferLayout* nativeObject = (JGPU::WGPUVertexBufferLayout*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static WGPUVertexBufferLayout obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return null;
        if (WGPUVertexBufferLayout_TEMP_STATIC_GEN_0 == null)
            WGPUVertexBufferLayout_TEMP_STATIC_GEN_0 = WGPUVertexBufferLayout.native_new();
        WGPUVertexBufferLayout_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUVertexBufferLayout_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUVertexBufferLayout::Obtain();
*/
    public static native long internal_native_Obtain();

    public void setAttributes(WGPUVectorVertexAttribute values) {
        internal_native_SetAttributes(native_address, values.native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVertexBufferLayout* nativeObject = (JGPU::WGPUVertexBufferLayout*)this_addr;
nativeObject->SetAttributes((WGPUVectorVertexAttribute* )values_addr);
*/
    public static native void internal_native_SetAttributes(long this_addr, long values_addr);

    public void setArrayStride(int offset) {
        internal_native_SetArrayStride(native_address, offset);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVertexBufferLayout* nativeObject = (JGPU::WGPUVertexBufferLayout*)this_addr;
nativeObject->SetArrayStride((int)offset);
*/
    public static native void internal_native_SetArrayStride(long this_addr, int offset);

    public void setStepMode(WGPUVertexStepMode stepMode) {
        internal_native_SetStepMode(native_address, stepMode.getValue());
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUVertexBufferLayout* nativeObject = (JGPU::WGPUVertexBufferLayout*)this_addr;
nativeObject->SetStepMode((::WGPUVertexStepMode)stepMode);
*/
    public static native void internal_native_SetStepMode(long this_addr, long stepMode);
}
