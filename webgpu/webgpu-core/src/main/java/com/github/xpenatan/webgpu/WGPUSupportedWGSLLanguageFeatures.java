/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package com.github.xpenatan.webgpu;

import com.github.xpenatan.jParser.idl.IDLBase;

public class WGPUSupportedWGSLLanguageFeatures extends IDLBase {

    static private WGPUSupportedWGSLLanguageFeatures WGPUSupportedWGSLLanguageFeatures_TEMP_STATIC_GEN_0;

    static public final WGPUSupportedWGSLLanguageFeatures NULL = WGPUSupportedWGSLLanguageFeatures.native_new();

    public WGPUSupportedWGSLLanguageFeatures() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new JGPU::WGPUSupportedWGSLLanguageFeatures();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected WGPUSupportedWGSLLanguageFeatures(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static WGPUSupportedWGSLLanguageFeatures native_new() {
        return new WGPUSupportedWGSLLanguageFeatures((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUSupportedWGSLLanguageFeatures* nativeObject = (JGPU::WGPUSupportedWGSLLanguageFeatures*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int getFeatureCount() {
        return internal_native_GetFeatureCount(native_address);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUSupportedWGSLLanguageFeatures* nativeObject = (JGPU::WGPUSupportedWGSLLanguageFeatures*)this_addr;
return nativeObject->GetFeatureCount();
*/
    public static native int internal_native_GetFeatureCount(long this_addr);

    public WGPUWGSLLanguageFeatureName getFeatureAt(int index) {
        int value = internal_native_GetFeatureAt(native_address, index);
        WGPUWGSLLanguageFeatureName[] values = WGPUWGSLLanguageFeatureName.values();
        for (int i = 0; i < values.length; i++) {
            WGPUWGSLLanguageFeatureName enumVal = values[i];
            if (enumVal != WGPUWGSLLanguageFeatureName.CUSTOM && enumVal.getValue() == value)
                return enumVal;
        }
        return WGPUWGSLLanguageFeatureName.CUSTOM.setValue(value);
    }

    /*[-JNI;-NATIVE]
JGPU::WGPUSupportedWGSLLanguageFeatures* nativeObject = (JGPU::WGPUSupportedWGSLLanguageFeatures*)this_addr;
return (int)nativeObject->GetFeatureAt((int)index);
*/
    public static native int internal_native_GetFeatureAt(long this_addr, int index);

    public static WGPUSupportedWGSLLanguageFeatures obtain() {
        long pointer = internal_native_Obtain();
        if (pointer == 0)
            return WGPUSupportedWGSLLanguageFeatures.NULL;
        if (WGPUSupportedWGSLLanguageFeatures_TEMP_STATIC_GEN_0 == null)
            WGPUSupportedWGSLLanguageFeatures_TEMP_STATIC_GEN_0 = WGPUSupportedWGSLLanguageFeatures.native_new();
        WGPUSupportedWGSLLanguageFeatures_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return WGPUSupportedWGSLLanguageFeatures_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)JGPU::WGPUSupportedWGSLLanguageFeatures::Obtain();
*/
    public static native long internal_native_Obtain();
}
